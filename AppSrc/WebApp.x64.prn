Compiling Program: D:\DataFlex Projects\Quickstart\AppSrc\WebApp.src
Memory Available: 40083091456
1>Use AllWebAppClasses.pkg
Using pre-compiled package ALLWEBAPPCLASSES.PKG
Including file: AllWebAppClasses.x64.pkd    (D:\DataFlex 24.0\Pkg\AllWebAppClasses.x64.pkd)
36017>Use cConnection.pkg
36017>Use cWebMenuItem.pkg
36017>
36017>Object oApplication is a cApplication
36019>    Object oConnection is a cConnection
36021>        Use LoginEncryption.pkg
Including file: LoginEncryption.pkg    (D:\DataFlex 24.0\Pkg\LoginEncryption.pkg)
36021>>>Use cLoginEncryption.pkg
Including file: cLoginEncryption.pkg    (D:\DataFlex 24.0\Pkg\cLoginEncryption.pkg)
36021>>>>>Use cCryptographerEx.pkg
36021>>>>>
36021>>>>>Class cLoginEncryption is a cObject
36022>>>>>    
36022>>>>>    Procedure Construct_Object
36024>>>>>        Forward Send Construct_Object
36026>>>>>        // this must be set to a multi (40ish) character random key
36026>>>>>        Property String psEncryptPassword ""
36027>>>>>        
36027>>>>>        Object oDataCrypter is a cCryptographerEx
36029>>>>>            Set piHash to CALG_SHA_256
36030>>>>>            Set piCipher to CALG_AES_256
36031>>>>>            Set psProvider to "" //  Not providing a specific provider gives the default provider for the provider type
36032>>>>>            Set piProvider to PROV_RSA_AES
36033>>>>>        End_Object
36034>>>>>    End_Procedure
36035>>>>>    
36035>>>>>    // This can be augmented to return a password encryption key using any
36035>>>>>    // hidden mechanism desired.
36035>>>>>    Function GetEncryptionPassword Returns String
36037>>>>>        String sPassword
36037>>>>>        Get psEncryptPassword to sPassword
36038>>>>>        Function_Return sPassword
36039>>>>>    End_Function
36040>>>>>    
36040>>>>>    // Encrypts a string into an unreadable hash that can later be decrypted using DecryptKey.
36040>>>>>    //
36040>>>>>    // Params:
36040>>>>>    //   sPlainText     String to encrypt.
36040>>>>>    // Returns:
36040>>>>>    //   Base64 encoded hash.
36040>>>>>    Function EncryptPassword String sPlainText Returns String
36042>>>>>        String sEncryptPassword sBase64
36042>>>>>        UChar[] ucBinary
36043>>>>>        Pointer pBase64
36043>>>>>        Integer iVoid
36043>>>>>        
36043>>>>>        //  Encrypt Key
36043>>>>>        Get GetEncryptionPassword to sEncryptPassword
36044>>>>>        If (sEncryptPassword = "") Begin
36046>>>>>            Error DFERR_PROGRAM "No encryption password set"
36047>>>>>>
36047>>>>>        End
36047>>>>>>
36047>>>>>        
36047>>>>>        Get Encrypt of oDataCrypter (StringToUCharArray(sEncryptPassword)) (StringToUCharArray(sPlainText)) to ucBinary
36048>>>>>        
36048>>>>>        If (SizeOfArray(ucBinary) = 0) Begin
36050>>>>>            Error DFERR_PROGRAM "Unable to encrypt database login password"
36051>>>>>>
36051>>>>>            Function_Return ""
36052>>>>>        End
36052>>>>>>
36052>>>>>        
36052>>>>>        //  Encode binary hash to Base64
36052>>>>>        Move (Base64Encode(AddressOf(ucBinary), SizeOfArray(ucBinary))) to pBase64
36053>>>>>        Move (PointerToString(pBase64)) to sBase64
36054>>>>>        Move (Free(pBase64)) to iVoid
36055>>>>>        
36055>>>>>        Function_Return sBase64
36056>>>>>    End_Function
36057>>>>>    
36057>>>>>    
36057>>>>>    // Decrypts the unreadable hash generated by EncryptKey into a readable string.
36057>>>>>    //
36057>>>>>    // Params:
36057>>>>>    //   sBase64EncryptedPassword       Base64 Encrypted password
36057>>>>>    // Returns:
36057>>>>>    //   Readable plain text password
36057>>>>>    Function DecryptPassword String sBase64EncryptedPassword Returns String
36059>>>>>        String sEncryptPassword
36059>>>>>        UChar[] ucBinary ucPlain
36061>>>>>        Boolean bIsHex
36061>>>>>        Integer iLen iVoid
36061>>>>>        Pointer pBinary
36061>>>>>        
36061>>>>>        If (sBase64EncryptedPassword <> "") Begin
36063>>>>>            //  Decode from Base64
36063>>>>>            Move (Base64Decode(AddressOf(sBase64EncryptedPassword), &iLen)) to pBinary
36064>>>>>            
36064>>>>>            Move (ResizeArray(ucBinary, iLen, 0)) to ucBinary
36065>>>>>            Move (MemCopy(AddressOf(ucBinary), pBinary, iLen)) to iVoid
36066>>>>>                        
36066>>>>>            Move (Free(pBinary)) to iVoid
36067>>>>>            
36067>>>>>            //  Encrypted binary hash to string
36067>>>>>            Get GetEncryptionPassword to sEncryptPassword
36068>>>>>            Get Decrypt of oDataCrypter (StringToUCharArray(sEncryptPassword)) ucBinary to ucPlain
36069>>>>>        End
36069>>>>>>
36069>>>>>        
36069>>>>>        Function_Return (UCharArrayToString(ucPlain))
36070>>>>>    End_Function
36071>>>>>End_Class
36072>>>
36072>>>Object oLoginEncryption is a cLoginEncryption
36074>>>
36074>>>    // this must be created in your appsrc directory and must contain an encryption
36074>>>    // key that is set to psEncryptPassword. It will look something like this
36074>>>    //
36074>>>    // Set psEncryptPassword to "JchUAo7W@r.b{<Yk~OONi0nq=sMi[*Rn[A-`Vo)q"
36074>>>    //  
Including file: LoginEncryptionKey.inc    (D:\DataFlex Projects\Quickstart\AppSrc\LoginEncryptionKey.inc)
36074>>>>// Studio generated login encryption key
36074>>>>Set psEncryptPassword to "?8}/Q-)210)Swym#Q+W0hb~(gpePKQ#7^SX\x1qb"
36075>>>>
36075>>>    
36075>>>    // use this to register this object to your cConnection Object. This object
36075>>>    // must be created after the cConnection object
36075>>>    Move Self to ghoLoginEncryption
36076>>>End_Object
36077>    End_Object
36078>End_Object
36079>
36079>Object oWebApp is a cWebApp
36081>    Set psTheme to "Df_Material"
36082>    Set peAlignView to alignCenter
36083>    
36083>    // It is important to set this so that all views will default
36083>    // to drill down style views.
36083>    Set peApplicationStyle to wvsDrillDown   
36084>    Set peApplicationStateMode to asmHistoryAndUrls 
36085>    Set psEncryptPassword to "\$8hJ}-$e/Dr2A_PaZ5~6Ed(y^&7i&^h=h8#=G]:"
36086>
36086>    Object oViewStack is a cWebViewStack
36088>    End_Object
36089>    
36089>    Procedure HideHeader
36092>        WebSet pbRender of oHeaderPanel to False
36093>    End_Procedure
36094>
36094>    Procedure ShowHeader
36097>        WebSet pbRender of oHeaderPanel to True 
36098>    End_Procedure
36099>
36099>    Object oHeaderPanel is a cWebPanel
36101>        Set peRegion to prTop
36102>        Set psCSSClass to "HeaderPanel"
36103>        
36103>        Object oMenuPanel is a cWebPanel
36105>            Set peRegion to prLeft
36106>            Set piWidth to 50
36107>            
36107>            Object oMenuButton is a cWebMenuButton
36109>                Set piMenuHeight to 500
36110>
36110>                Object oDashboard_itm is a cWebMenuItem
36112>                    Set psCaption to C_$Dashboard
36113>                    
36113>                    WebRegisterPath ntNavigateBegin oDashboard
36119>
36119>                    Procedure OnClick
36122>                        Send NavigatePath
36123>                    End_Procedure
36124>                End_Object
36125>
36125>                Object oViewMenu is a cWebMenuItem
36127>                    Set psCaption to C_$View
36128>
36128>                    Object oPersonItem1 is a cWebMenuItem
36130>                        Set psCaption to "Person"
36131>
36131>                        WebRegisterPath ntNavigateBegin oSelectPerson
36137>
36137>                        Procedure OnClick
36140>                            Forward Send OnClick
36142>                                Send NavigatePath
36143>                        End_Procedure
36144>                    End_Object
36145>
36145>                    Object oMedialistItem1 is a cWebMenuItem
36147>                        Set psCaption to "Media list"
36148>
36148>                        WebRegisterPath ntNavigateBegin oSelectMedia
36154>
36154>                        Procedure OnClick
36157>                            Forward Send OnClick
36159>                                Send NavigatePath
36160>                        End_Procedure
36161>                    End_Object
36162>                End_Object
36163>
36163>                Object oSignOut_itm is a cWebMenuItem
36165>                    Set psCaption to C_$LogOut
36166>
36166>                    Procedure OnClick
36169>                        Send RequestLogOut of ghoWebSessionManager
36170>                    End_Procedure
36171>                End_Object
36172>            End_Object  
36173>
36173>            Object oBackButton is a cWebButton
36175>                Set psCSSClass to "WebBack_Icon"
36176>                Set pbRender to False
36177>                
36177>                Procedure OnClick
36180>                    Handle hoTop
36180>                    
36180>                    Get TopViewHandle of oViewStack to hoTop
36181>                    If (hoTop > 0) Begin
36183>                        Send NavigateCancel of hoTop 
36184>                    End
36184>                End_Procedure
36185>            End_Object
36186>            
36186>            Send AddClient of oViewStack Self
36187>                
36187>            Procedure OnUpdateViewStack
36190>                Handle hoTop hoDflt
36190>                Integer eMode
36190>                Boolean bTop
36190>                
36190>                WebGet peMode of (Owner(Self)) to eMode
36191>                
36191>                Get TopViewHandle of oViewStack to hoTop
36192>                Get GetDefaultView to hoDflt
36193>                Move (hoTop=0 or hoTop=hoDflt) to bTop
36194>                
36194>                WebSet pbRender of oBackButton to (not(bTop) and eMode >= rmMobile)
36195>                WebSet pbRender of oMenuButton to (bTop or eMode < rmMobile)
36196>            End_Procedure
36197>
36197>        End_Object
36198>
36198>        Object oCaptionPanel is a cWebPanel
36200>            Set piColumnCount to 12
36201>
36201>            Object oCaptionBreadcrumb is a cWebBreadcrumb
36203>                Set peBreadcrumbStyle to crumbCaption
36204>                WebSetResponsive peBreadcrumbStyle rmMobile to crumbDropDown
36205>            End_Object         
36206>        End_Object
36207>        
36207>        Object oActionPanel is a cWebPanel
36209>            Set peRegion to prRight
36210>            Set piColumnCount to 1
36211>            Set piWidth to 120
36212>
36212>            Object oMainActions is a cWebActionBar
36214>                Set psGroupName to "MainActions"
36215>
36215>                Set piColumnSpan to 0
36216>                Set peAlign to alignRight
36217>            End_Object
36218>        End_Object
36219>
36219>        Object oBreadcrumbPanel is a cWebPanel
36221>            Set peRegion to prBottom
36222>            
36222>            Object oHorizontalBreadcrumb is a cWebBreadcrumb
36224>                WebSetResponsive pbRender rmMobile to False
36225>            End_Object         
36226>        End_Object
36227>
36227>    End_Object    
36228>
36228>    Use SessionManager.wo
Including file: SessionManager.wo    (D:\DataFlex Projects\Quickstart\AppSrc\SessionManager.wo)
36228>>>Use cWebSessionManagerStandard.pkg
Including file: cWebSessionManagerStandard.pkg    (D:\DataFlex 24.0\Pkg\cWebSessionManagerStandard.pkg)
36228>>>>>Use cWebSessionManager.pkg
36228>>>>>Use cWebAppSessionDataDictionary.dd
Including file: cWebAppSessionDataDictionary.dd    (D:\DataFlex 24.0\Pkg\cWebAppSessionDataDictionary.dd)
36228>>>>>>>Use DataDict.pkg
36228>>>>>>>
36228>>>>>>>Open WebAppSession
Including file: WebAppSession.fd    (D:\DataFlex Projects\Quickstart\DDSrc\WebAppSession.fd)
36230>>>>>>>Open WebAppUser
Including file: WebAppUser.fd    (D:\DataFlex Projects\Quickstart\DDSrc\WebAppUser.fd)
36232>>>>>>>
36232>>>>>>>Class cWebAppSessionDataDictionary is a DataDictionary
36233>>>>>>>    Procedure Construct_Object
36235>>>>>>>        Forward Send Construct_Object
36237>>>>>>>
36237>>>>>>>        Set Main_File to WebAppSession.File_Number
36238>>>>>>>
36238>>>>>>>        Set Add_Server_File to WebAppUser.File_Number
36239>>>>>>>
36239>>>>>>>        Set ParentNullAllowed WebAppUser.File_Number to True
36240>>>>>>>
36240>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
36241>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
36242>>>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
36243>>>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
36244>>>>>>>
36244>>>>>>>        Set Field_Checkbox_Values Field WebAppSession.Active to "Y" "N"
36245>>>>>>>        Set Field_Error Field WebAppSession.Active to 500 "Invalid WebAppSession Active State"
36246>>>>>>>    End_Procedure
36247>>>>>>>
36247>>>>>>>    Procedure Creating
36249>>>>>>>        DateTime dtCurrentDateTime
36249>>>>>>>        
36249>>>>>>>        Forward Send Creating
36251>>>>>>>        
36251>>>>>>>        //  Init usecounter
36251>>>>>>>        Move 0 to WebAppSession.UseCount
36252>>>>>>>        
36252>>>>>>>        //  Set the creation and access time to the current time
36252>>>>>>>        Move (CurrentDateTime()) to dtCurrentDateTime
36253>>>>>>>    
36253>>>>>>>        Get TimeToString dtCurrentDateTime to WebAppSession.CreateTime
36254>>>>>>>        Get TimeToString dtCurrentDateTime to WebAppSession.LastAccessTime
36255>>>>>>>        
36255>>>>>>>        Move dtCurrentDateTime to WebAppSession.CreateDate
36256>>>>>>>        Move dtCurrentDateTime to WebAppSession.LastAccessDate
36257>>>>>>>    End_Procedure
36258>>>>>>>    
36258>>>>>>>    //
36258>>>>>>>    //  Converts the given time to an string that can be saved in the database.
36258>>>>>>>    //
36258>>>>>>>    //  Params:
36258>>>>>>>    //      dtTime  Time to convert
36258>>>>>>>    //  Returns:
36258>>>>>>>    //      String with "HH:MM:SS" format
36258>>>>>>>    //
36258>>>>>>>    Function TimeToString DateTime dtTime Returns String
36260>>>>>>>        String sHours sMinutes sSeconds
36260>>>>>>>        
36260>>>>>>>        //  Extract parts
36260>>>>>>>        Move (String(DateGetHour(dtTime))) to sHours
36261>>>>>>>        Move (String(DateGetMinute(dtTime))) to sMinutes
36262>>>>>>>        Move (String(DateGetSecond(dtTime))) to sSeconds
36263>>>>>>>        
36263>>>>>>>        //  Fill out with 0
36263>>>>>>>        If (Length(sHours) = 1) ;            Move ("0" + sHours) to sHours
36266>>>>>>>        If (Length(sMinutes) = 1) ;            Move ("0" + sMinutes) to sMinutes
36269>>>>>>>        If (Length(sSeconds) = 1) ;            Move ("0" + sSeconds) to sSeconds
36272>>>>>>>        
36272>>>>>>>        Function_Return (sHours + ":" + sMinutes + ":" + sSeconds)
36273>>>>>>>    End_Function
36274>>>>>>>    
36274>>>>>>>    //
36274>>>>>>>    //  Sets the time of the datetime variable to the time in the string.
36274>>>>>>>    //
36274>>>>>>>    //  Params:
36274>>>>>>>    //      dtTime  Datetime variable to add time to
36274>>>>>>>    //      sTimeString String with time in the format "HH:MM:SS"
36274>>>>>>>    //  Returns:
36274>>>>>>>    //      dtDateTime with the loaded time
36274>>>>>>>    //
36274>>>>>>>    Function StringToTime DateTime dtTime String sTimeString Returns DateTime
36276>>>>>>>        String sHours sMinutes sSeconds
36276>>>>>>>        
36276>>>>>>>        //  Extract parts
36276>>>>>>>        Move (Mid(sTimeString, 2, 1)) to sHours
36277>>>>>>>        Move (Mid(sTimeString, 2, 4)) to sMinutes
36278>>>>>>>        Move (Mid(sTimeString, 2, 7)) to sSeconds
36279>>>>>>>        
36279>>>>>>>        //  Set to DateTime
36279>>>>>>>        Move (DateSetHour(dtTime, (Integer(sHours)))) to dtTime
36280>>>>>>>        Move (DateSetMinute(dtTime, (Integer(sMinutes)))) to dtTime
36281>>>>>>>        Move (DateSetSecond(dtTime, (Integer(sSeconds)))) to dtTime
36282>>>>>>>        
36282>>>>>>>        Function_Return dtTime
36283>>>>>>>    End_Function
36284>>>>>>>End_Class
36285>>>>>Use cWebAppUserDataDictionary.dd
Including file: cWebAppUserDataDictionary.dd    (D:\DataFlex 24.0\Pkg\cWebAppUserDataDictionary.dd)
36285>>>>>>>Use DataDict.pkg
36285>>>>>>>Open WebAppUser
36287>>>>>>>Open WebAppSession
36289>>>>>>>
36289>>>>>>>Class cWebAppUserDataDictionary is a DataDictionary
36290>>>>>>>    
36290>>>>>>>    Procedure Construct_Object
36292>>>>>>>        Forward Send Construct_Object
36294>>>>>>>        Set Main_File to WebAppUser.File_Number
36295>>>>>>>
36295>>>>>>>        Set Add_Client_File to WebAppSession.File_Number
36296>>>>>>>
36296>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
36297>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
36298>>>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
36299>>>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
36300>>>>>>>    End_Procedure
36301>>>>>>>
36301>>>>>>>End_Class
36302>>>>>
36302>>>>>Class cWebSessionManagerStandard is a cWebSessionManager
36303>>>>>    
36303>>>>>    Procedure Construct_Object
36305>>>>>        Handle hoUserDD hoSessionDD
36305>>>>>        
36305>>>>>        Forward Send Construct_Object
36307>>>>>        
36307>>>>>        Property Handle phoUserDD 0      // Handle to the WebAppUser DDO
36308>>>>>        Property Handle phoSessionDD 0   // Handle to the WebAppSession DDO        
36309>>>>>        
36309>>>>>        Get Create (RefClass(cWebAppUserDataDictionary)) to hoUserDD
36310>>>>>        Get Create (RefClass(cWebAppSessionDataDictionary)) to hoSessionDD
36311>>>>>        Set DDO_Server of hoSessionDD to hoUserDD
36312>>>>>
36312>>>>>        Set phoUserDD to hoUserDD
36313>>>>>        Set phoSessionDD to hoSessionDD
36314>>>>>        Property Boolean pbCreatingNewSession False
36315>>>>>        Property String psLoginName
36316>>>>>        Property String psUserName ""
36317>>>>>        Property Integer piUserRights 0
36318>>>>>    End_Procedure
36319>>>>>    
36319>>>>>    Function CreateSession String sRemoteAddress Returns String
36321>>>>>        String sSessionKey
36321>>>>>        Integer iErr
36321>>>>>        Boolean bLogWebSession
36321>>>>>        Handle hoSessionDD       
36321>>>>>        Get phoSessionDD to hoSessionDD
36322>>>>>        
36322>>>>>        //  Get session key
36322>>>>>        Forward Get CreateSession sRemoteAddress to sSessionKey
36324>>>>>        
36324>>>>>        Get pbLogWebSession to bLogWebSession
36325>>>>>        If not bLogWebSession Begin
36327>>>>>            Function_Return sSessionKey        
36328>>>>>        End
36328>>>>>>
36328>>>>>
36328>>>>>        //  Store session
36328>>>>>        Send Clear of hoSessionDD
36329>>>>>        Set Field_Changed_Value of hoSessionDD Field WebAppSession.SessionKey to sSessionKey
36330>>>>>        Set Field_Changed_Value of hoSessionDD Field WebAppSession.RemoteAddress to sRemoteAddress
36331>>>>>        Set Field_Changed_Value of hoSessionDD Field WebAppSession.Active to "Y"
36332>>>>>        Get Request_Validate of hoSessionDD to iErr
36333>>>>>        If (iErr) Begin
36335>>>>>            // this should not happen. If it does its a programming error
36335>>>>>            Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
36336>>>>>>
36336>>>>>            Function_Return ""
36337>>>>>        End
36337>>>>>>
36337>>>>>        Send Request_Save of hoSessionDD
36338>>>>>        If (Err) Begin
36340>>>>>            // this shouldn't happen, if it does likely a duplicate session key issue, even through request_save already gave an error we give another one to make tracking down easier
36340>>>>>            Error DFERR_PROGRAM C_$WebAppSesionSaveFailed
36341>>>>>>
36341>>>>>            Function_Return ""
36342>>>>>        End
36342>>>>>>
36342>>>>>       
36342>>>>>        Function_Return sSessionKey        
36343>>>>>    End_Function
36344>>>>>    
36344>>>>>    
36344>>>>>    Function ValidateSession String sSessionKey Boolean bOptLoadWebApp Returns Boolean
36346>>>>>        DateTime dtLastAccess dtCurrent
36346>>>>>        TimeSpan tsDiff
36346>>>>>        Integer iErr iSessionTimeout iSpanMinutes
36346>>>>>        Boolean bResult bCreatingNewSession
36346>>>>>        Boolean bLogWebSession bLoadWebApp
36346>>>>>        Integer eLoginMode
36346>>>>>        String sTime
36346>>>>>        Handle hoSessionDD hoUserDD       
36346>>>>>        
36346>>>>>        Move False to bLoadWebApp
36347>>>>>        If (num_arguments >= 2) Begin
36349>>>>>            Move bOptLoadWebApp to bLoadWebApp
36350>>>>>        End
36350>>>>>>
36350>>>>>        
36350>>>>>        Get phoSessionDD to hoSessionDD
36351>>>>>        Get phoUserDD to hoUserDD
36352>>>>>        
36352>>>>>        Get pbLogWebSession to bLogWebSession
36353>>>>>        Get peLoginMode to eLoginMode
36354>>>>>        
36354>>>>>        // for this object, you can only disable logging if login completely is disabled
36354>>>>>        If (not(bLogWebSession) and (eLoginMode<>lmLoginNone)) Begin
36356>>>>>            Error DFERR_PROGRAM C_$WebSessionLoggingMustBeEnabled
36357>>>>>>
36357>>>>>            Function_Return False
36358>>>>>        End
36358>>>>>>
36358>>>>>
36358>>>>>        //  Clear session properties
36358>>>>>        Set psSessionKey to ""
36359>>>>>        Send UpdateSessionProperties True
36360>>>>>        
36360>>>>>        If not bLogWebSession Begin
36362>>>>>            Forward Get ValidateSession sSessionKey to bResult
36364>>>>>            Function_Return bResult
36365>>>>>        End        
36365>>>>>>
36365>>>>>        
36365>>>>>        Move False to bResult
36366>>>>>        Get piSessionTimeout to iSessionTimeout 
36367>>>>>        
36367>>>>>        //  Check if session exists
36367>>>>>        Send Clear of hoSessionDD
36368>>>>>        Move sSessionKey to WebAppSession.SessionKey
36369>>>>>        Send Find of hoSessionDD EQ Index.1
36370>>>>>            
36370>>>>>        If (Found) Begin
36372>>>>>            //  Calculate timespan between now and last access time
36372>>>>>            Move (CurrentDateTime()) to dtCurrent
36373>>>>>            Move WebAppSession.LastAccessDate to dtLastAccess
36374>>>>>            Get StringToTime of hoSessionDD dtLastAccess WebAppSession.LastAccessTime to dtLastAccess
36375>>>>>            Move (dtCurrent - dtLastAccess) to tsDiff
36376>>>>>            Move (SpanTotalMinutes(tsDiff)) to iSpanMinutes
36377>>>>>            
36377>>>>>            //  Check if session didn't time out
36377>>>>>            If (IsDateValid(dtLastAccess) and (iSessionTimeout <= 0 or (iSpanMinutes < iSessionTimeout)) and WebAppSession.Active = "Y") Begin
36379>>>>>                Forward Get ValidateSession sSessionKey to bResult
36381>>>>>                   
36381>>>>>                If (bResult) Begin
36383>>>>>                    //  Update session record
36383>>>>>                    Get TimeToString of hoSessionDD dtCurrent to sTime 
36384>>>>>                    Set Field_Changed_Value of hoSessionDD Field WebAppSession.LastAccessDate to dtCurrent
36385>>>>>                    Set Field_Changed_Value of hoSessionDD Field WebAppSession.LastAccessTime to sTime
36386>>>>>                    Set Field_Changed_Value of hoSessionDD Field WebAppSession.UseCount to (WebAppSession.UseCount + 1)
36387>>>>>                    Get Request_Validate of hoSessionDD to iErr
36388>>>>>                    If (iErr) Begin
36390>>>>>                        // this should not happen. If it does its a programming error
36390>>>>>                        Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
36391>>>>>>
36391>>>>>                        Function_Return False
36392>>>>>                    End
36392>>>>>>
36392>>>>>                    Send Request_Save of hoSessionDD
36393>>>>>                    
36393>>>>>                    //  Update user properties
36393>>>>>                    Send UpdateSessionProperties False
36394>>>>>                End
36394>>>>>>
36394>>>>>            End
36394>>>>>>
36394>>>>>            Else Begin
36395>>>>>                // Test the Creating New Session Flag to protect against infinite recursion....
36395>>>>>                Get pbCreatingNewSession to bCreatingNewSession
36396>>>>>                
36396>>>>>                If (not(bCreatingNewSession)) Begin
36398>>>>>                    If (not(bLoadWebApp)) Begin
36400>>>>>                        Move False to bResult   //  We can only continue immediately if we were loading the webapp, other operations are not allowed!
36401>>>>>                        Error DFERR_WEBAPP_SESSION_TIMEOUT "Your application session has timed out or is inactive, please login again."
36402>>>>>>
36402>>>>>                        Send NavigateRefresh of ghoWebApp          // refresh the WebApp at the client (triggers a login)
36403>>>>>                    End
36403>>>>>>
36403>>>>>                    Else Begin
36404>>>>>                        Set pbCreatingNewSession to True                    
36405>>>>>                        Get RecreateSession of ghoWebApp to bResult 
36406>>>>>                        Set pbCreatingNewSession to False                        
36407>>>>>                    End
36407>>>>>>
36407>>>>>                End
36407>>>>>>
36407>>>>>            End
36407>>>>>>
36407>>>>>        End
36407>>>>>>
36407>>>>>        Else Begin
36408>>>>>            Error DFERR_WEBAPP_BAD_SESSION_KEY "Session key not known (reload page to recreate session)"
36409>>>>>>
36409>>>>>        End
36409>>>>>>
36409>>>>>        
36409>>>>>        Function_Return bResult
36410>>>>>    End_Function
36411>>>>>    
36411>>>>>    Function UserLogin String sLoginName String sPassword Returns Boolean
36413>>>>>        String sSessionKey sUserPassword
36413>>>>>        Handle hoSessionDD hoUserDD
36413>>>>>        Boolean bMatch  
36413>>>>>        
36413>>>>>        Get phoSessionDD to hoSessionDD
36414>>>>>        Get phoUserDD to hoUserDD
36415>>>>>        Integer iErr eLoginMode
36415>>>>>        
36415>>>>>        // Refind session record
36415>>>>>        Get psSessionKey to sSessionKey
36416>>>>>        Send Clear of hoSessionDD
36417>>>>>        Move sSessionKey to WebAppSession.SessionKey
36418>>>>>        Send Find of hoSessionDD EQ Index.1
36419>>>>>        
36419>>>>>        If (Found and WebAppSession.SessionKey = sSessionKey) Begin
36421>>>>>            Get peLoginMode to eLoginMode
36422>>>>>            
36422>>>>>            //  Find the user
36422>>>>>            Move sLoginName to WebAppUser.LoginName
36423>>>>>            Send Find of hoUserDD EQ Index.1
36424>>>>>            
36424>>>>>            // Check username and password
36424>>>>>            If (Found and (Lowercase(sLoginName) = Lowercase(Trim(WebAppUser.LoginName)))) Begin
36426>>>>>                Get Field_Current_Value of hoUserDD Field WebAppUser.Password to sUserPassword
36427>>>>>                Get ComparePasswords (Trim(sUserPassword)) (Trim(sPassword)) to bMatch
36428>>>>>                
36428>>>>>                If (bMatch) Begin
36430>>>>>                    // Store the login
36430>>>>>                    Set Field_Changed_Value of hoUserDD Field WebAppUser.LastLogin to (CurrentDateTime())
36431>>>>>                    Get Request_Validate of hoSessionDD to iErr
36432>>>>>                    If (iErr) Begin
36434>>>>>                        // this should not happen. If it does its a programming error
36434>>>>>                        Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
36435>>>>>>
36435>>>>>                        Function_Return False
36436>>>>>                    End
36436>>>>>>
36436>>>>>                    
36436>>>>>                    Send Request_Save of hoSessionDD
36437>>>>>                    
36437>>>>>                    // Update session properties
36437>>>>>                    Send UpdateSessionProperties False
36438>>>>>                    Send NotifyChangeRights
36439>>>>>                    Function_Return True
36440>>>>>                End
36440>>>>>>
36440>>>>>                Else Begin
36441>>>>>                    //  We should rely directly on this buffer elsewhere but just be sure
36441>>>>>                    Send Clear of hoUserDD
36442>>>>>                End
36442>>>>>>
36442>>>>>            End
36442>>>>>>
36442>>>>>        End
36442>>>>>>
36442>>>>>          
36442>>>>>        Function_Return False
36443>>>>>    End_Function
36444>>>>>    
36444>>>>>    Function IsLoggedIn Returns Boolean
36446>>>>>        String sLoginName
36446>>>>>        Boolean bLogWebSession bLoggedIn
36446>>>>>        
36446>>>>>        Get pbLogWebSession to bLogWebSession
36447>>>>>        If not bLogWebSession Begin
36449>>>>>            Forward Get IsLoggedIn to bLoggedIn
36451>>>>>            Function_Return bLoggedIn
36452>>>>>        End
36452>>>>>>
36452>>>>>        
36452>>>>>        Get psLoginName to sLoginName
36453>>>>>        
36453>>>>>        Function_Return (sLoginName <> "")
36454>>>>>    End_Function
36455>>>>>    
36455>>>>>    
36455>>>>>    //
36455>>>>>    // This procedure is called when validating a session and after logging in. Its purpose is to 
36455>>>>>    // update properties based on the session and user data. Augment this function to update 
36455>>>>>    // properties based on the session / user table. Note that WebAppUser and WebAppSession contain
36455>>>>>    // the right records when this procedure is called.
36455>>>>>    //
36455>>>>>    // Params:
36455>>>>>    //      bClear   True if the procedure is called before session validation to clear properties.
36455>>>>>    //
36455>>>>>    Procedure UpdateSessionProperties Boolean bClear
36457>>>>>        Handle hoUserDD
36457>>>>>        
36457>>>>>        Get phoUserDD to hoUserDD
36458>>>>>        
36458>>>>>        //  Update user properties
36458>>>>>        If (not(bClear) and HasRecord(hoUserDD)) Begin
36460>>>>>            Set psUsername to (Trim(WebAppUser.FullName))
36461>>>>>            Set psLoginName to (Trim(WebAppUser.LoginName))
36462>>>>>            Set piUserRights to WebAppUser.Rights
36463>>>>>            
36463>>>>>            Send OnSessionPropertiesSet 
36464>>>>>        End
36464>>>>>>
36464>>>>>        Else Begin
36465>>>>>            Set psUsername to ""
36466>>>>>            Set psLoginName to ""
36467>>>>>            Set piUserRights to 0
36468>>>>>            
36468>>>>>            Send OnSessionPropertiesClear
36469>>>>>        End
36469>>>>>>
36469>>>>>    End_Procedure
36470>>>>>    
36470>>>>>    //
36470>>>>>    // This function is called to perform the password comparison. It gets the entered password and
36470>>>>>    // the password value of the user table as parameters. The WebAppUser buffer will contain the
36470>>>>>    // right record. This function can be augmented to implement security features like storing the
36470>>>>>    // password as a hashed value.
36470>>>>>    //
36470>>>>>    // Params:
36470>>>>>    //      sUserPassword       Value of the WebAppUser.Password field.
36470>>>>>    //      sEnteredPassword    Value entered on the login screen during login.
36470>>>>>    //
36470>>>>>    Function ComparePasswords String sUserPassword String sEnteredPassword Returns Boolean
36472>>>>>        Function_Return (sUserPassword = sEnteredPassword)
36473>>>>>    End_Function
36474>>>>>    
36474>>>>>    Procedure OnSessionPropertiesSet
36476>>>>>        //  Empty event stub
36476>>>>>    End_Procedure
36477>>>>>    
36477>>>>>    Procedure OnSessionPropertiesClear
36479>>>>>        //  Empty event stub
36479>>>>>    End_Procedure
36480>>>>>    
36480>>>>>    Procedure EndSession
36482>>>>>        Integer iErr
36482>>>>>        Boolean bLogWebSession
36482>>>>>        Handle hoSessionDD       
36482>>>>>        
36482>>>>>        Get phoSessionDD to hoSessionDD
36483>>>>>        Get pbLogWebSession to bLogWebSession
36484>>>>>        If not bLogWebSession Begin
36486>>>>>            Forward Send EndSession
36488>>>>>            Procedure_Return
36489>>>>>        End
36489>>>>>>
36489>>>>>            
36489>>>>>        //  Check if session exists
36489>>>>>        Send Clear of hoSessionDD
36490>>>>>        Get psSessionKey to WebAppSession.SessionKey
36491>>>>>        
36491>>>>>        Send Find of hoSessionDD EQ Index.1
36492>>>>>        If (Found) Begin
36494>>>>>            Set Field_Changed_Value of hoSessionDD Field WebAppSession.Active to "N"
36495>>>>>            Get Request_Validate of hoSessionDD to iErr
36496>>>>>            If (iErr) Begin
36498>>>>>                // this should not happen. If it does its a programming error
36498>>>>>                Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
36499>>>>>>
36499>>>>>                Procedure_Return
36500>>>>>            End
36500>>>>>>
36500>>>>>            Send Request_Save of hoSessionDD
36501>>>>>        End
36501>>>>>>
36501>>>>>    End_Procedure
36502>>>>>
36502>>>>>End_Class
36503>>>>>
36503>>>
36503>>>Object oSessionManager is a cWebSessionManagerStandard
36505>>>End_Object
36506>>>
36506>>>
36506>    Use Login.wo
Including file: Login.wo    (D:\DataFlex Projects\Quickstart\AppSrc\Login.wo)
36506>>>Use cWebView.pkg
36506>>>Use cWebForm.pkg
36506>>>Use cWebButton.pkg
36506>>>Use cWebPanel.pkg
36506>>>Use cWebLabel.pkg
36506>>>Use cWebSpacer.pkg
36506>>>Use cWebImage.pkg
36506>>>
36506>>>Object oLogin is a cWebView
36508>>>    Set piMinWidth to 250
36509>>>    Set piMaxWidth to 420
36510>>>    Set pbLoginModeEnforced to False
36511>>>    Set piColumnCount to 12
36512>>>    Set psCSSClass to "LoginView"
36513>>>    Set pbServerOnSubmit to True
36514>>>    
36514>>>    Set psStateViewName to "Login"
36515>>>    Set pbStateReplace to True  // Always replace the state so the login never becomes its own history item
36516>>>    
36516>>>    Property String psPrevStateHash ""  // Remember the state hash that the user navigated too so we can redirect after login
36519>>>    
36519>>>    Delegate Set phoLoginView to Self
36521>>>    
36521>>>    Object oTopSpacer is a cWebSpacer
36523>>>        Set pbFillHeight to True
36524>>>        Set piColumnSpan to 12
36525>>>    End_Object
36526>>>    
36526>>>    Object oWarning is a cWebLabel
36528>>>        Set pbVisible to False
36529>>>        Set psCaption to "Invalid User ID or password. \n\rHint: 'Guest' & 'guest'."
36530>>>        Set peAlign to alignCenter
36531>>>        Set piColumnSpan to 12
36532>>>        Set psCSSClass to "LoginWarning"
36533>>>    End_Object
36534>>>    
36534>>>    Object oLogo is a cWebImage
36536>>>        Set piColumnSpan to 10
36537>>>        Set psUrl to "images/DF_Logo_Retina.png"
36538>>>        Set pePosition to wiFit
36539>>>        Set piColumnIndex to 1
36540>>>        Set piHeight to 160
36541>>>        
36541>>>        WebSetResponsive piHeight rmMobile to 100  // Best for small smart phones
36542>>>    End_Object
36543>>>    
36543>>>    Object oLoginName is a cWebForm
36545>>>        Set psLabel to "User ID:"
36546>>>        Set peLabelPosition to lpTop
36547>>>        Set piMaxLength to 20
36548>>>        Set piColumnIndex to 1
36549>>>        Set pbShowLabel to False
36550>>>        Set psPlaceHolder to "loginname"
36551>>>        Set piColumnSpan to 10
36552>>>        Set psAutoComplete to "username"
36553>>>    End_Object
36554>>>    
36554>>>    Object oPassword is a cWebForm
36556>>>        Set psLabel to "Password:"
36557>>>        Set pbPassword to True
36558>>>        Set peLabelAlign to alignLeft
36559>>>        Set piMaxLength to 20
36560>>>        Set peLabelPosition to lpTop
36561>>>        Set pbShowLabel to False
36562>>>        Set psPlaceHolder to "password"
36563>>>        Set piColumnSpan to 10
36564>>>        Set piColumnIndex to 1
36565>>>        Set psAutoComplete to "current-password"
36566>>>    End_Object
36567>>>    
36567>>>    Object oWebSpacer1 is a cWebSpacer
36569>>>        Set piColumnSpan to 12
36570>>>        Set piHeight to 10
36571>>>    End_Object
36572>>>    
36572>>>    Object oLoginButton is a cWebButton
36574>>>        Set pbShowLabel to False
36575>>>        Set psCaption to "sign in"
36576>>>        Set pbServerOnClick to True
36577>>>        Set piColumnSpan to 10
36578>>>        Set piColumnIndex to 1
36579>>>        
36579>>>        Procedure OnClick
36582>>>            Send DoLogin
36583>>>        End_Procedure
36584>>>    End_Object
36585>>>    
36585>>>    Object oBottomSpacer is a cWebSpacer
36587>>>        Set pbFillHeight to True
36588>>>        Set piColumnSpan to 12
36589>>>    End_Object
36590>>>    
36590>>>    Procedure DoLogin
36593>>>        String sLoginName sPassword sPrevStateHash
36593>>>        Boolean bResult
36593>>>        
36593>>>        WebGet psValue of oLoginName to sLoginName
36594>>>        WebGet psValue of oPassword to sPassword
36595>>>        
36595>>>        Get UserLogin of ghoWebSessionManager sLoginName sPassword to bResult
36596>>>        
36596>>>        If (bResult) Begin
36598>>>            Send Hide of oLogin
36599>>>            Send ShowHeader of ghoWebApp
36600>>>            WebSet psCSSClass of ghoWebApp to ""
36601>>>            
36601>>>            WebGet psPrevStateHash to sPrevStateHash
36602>>>            Send NavigateToStateHash of ghoWebApp sPrevStateHash True
36603>>>            
36603>>>            // clear the login values. we don't want to return the login id & password as synchronized properties....
36603>>>            WebSet psValue of oLoginName to ""
36604>>>            WebSet psValue of oPassword  to ""
36605>>>            WebSet pbVisible of oWarning to False
36606>>>        End
36606>>>>
36606>>>        Else Begin
36607>>>            WebSet pbVisible of oWarning to True
36608>>>        End
36608>>>>
36608>>>    End_Procedure
36609>>>    
36609>>>    Procedure OnSubmit
36612>>>        Send DoLogin
36613>>>    End_Procedure
36614>>>    
36614>>>    Procedure OnLoad
36617>>>        String sPrevStateHash sView
36617>>>        
36617>>>        Forward Send OnLoad
36619>>>        
36619>>>        //  Store the current state so we can go back to that later (only if it points to a different view)
36619>>>        Get StateHash of ghoWebApp to sPrevStateHash
36620>>>        Send ParseViewStateHash sPrevStateHash (&sView)
36621>>>        If (Lowercase(sView) <> Lowercase(psStateViewName(Self))) Begin
36623>>>            WebSet psPrevStateHash to sPrevStateHash
36624>>>        End
36624>>>>
36624>>>        
36624>>>    End_Procedure
36625>>>    
36625>>>    Procedure OnBeforeShow
36628>>>        //  Hide header & apply nice background style
36628>>>        Send HideHeader to ghoWebApp
36629>>>        WebSet psCSSClass of ghoWebApp to "LoginBackground"
36630>>>    End_Procedure
36631>>>    
36631>>>End_Object
36632>>>
36632>>>
36632>>>
36632>>>
36632>    Use WebResourceManager.wo
Including file: WebResourceManager.wo    (D:\DataFlex Projects\Quickstart\AppSrc\WebResourceManager.wo)
36632>>>Use cWebResourceManager.pkg
36632>>>
36632>>>Object oWebResourceManager is a cWebResourceManager
36634>>>End_Object
36635>    
36635>    Use Dashboard.wo
Including file: Dashboard.wo    (D:\DataFlex Projects\Quickstart\AppSrc\Dashboard.wo)
36635>>>Use cWebView.pkg
36635>>>Use cWebPanel.pkg
36635>>>Use cWebForm.pkg
36635>>>Use cWebButton.pkg
36635>>>Use cWebGroup.pkg
36635>>>Use cWebSpacer.pkg
36635>>>Use cWebHtmlBox.pkg
36635>>>Use cWebMenuGroup.pkg
36635>>>Use cWebMenuItem.pkg
36635>>>Use cWebLabel.pkg
36635>>>Use cWebList.pkg
36635>>>Use cWebColumn.pkg
36635>>>
36635>>>Object oDashboard is a cWebView
36637>>>
36637>>>    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
36637>>>    // Add a DDO Structure 
36637>>>    //
36637>>>    // There is no need to synchronize a DD structure on the client so we do
36637>>>    // not set the Server property or send ADDOStructure. We will simply use
36637>>>    // DDO's to mine data and generate HTML for our cWebHTMLBox objects.
36637>>>    // It is the HTML in these objects that is sent to the client each time 
36637>>>    // this page is shown.
36637>>>    //
36637>>>    // Also, it is important for the drill-down Navigation interface that we
36637>>>    // do not set the Server property to some DDO because this will affect 
36637>>>    // constraints in the next view that we navigate to.
36637>>>    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
36637>>>
36637>>>    Set piMaxWidth to 1024
36638>>>    
36638>>>    Set psCaption to "Dashboard"
36639>>>    Set peViewType to vtUndefined
36640>>>    Set pbShowCaption to False
36641>>>    Set psCSSClass to "Dashboard"
36642>>>    
36642>>>    Object oWebMainPanel is a cWebPanel
36644>>>        Set piColumnCount to 24
36645>>>        
36645>>>        // - - - - - - - - - - - - - - -
36645>>>        // Main Panel's Responsive Rules
36645>>>        // - - - - - - - - - - - - - - -
36645>>>        WebSetResponsive piColumnCount rmMobile to 1
36646>>>        WebSetResponsive piColumnCount rmTabletPortrait to 16
36647>>>    
36647>>>        Object oTiles_grp is a cWebGroup
36649>>>            Set piColumnSpan to 8
36650>>>            Set pbShowBorder to False
36651>>>            Set pbShowCaption to False
36652>>>            Set piColumnCount to 12
36653>>>            
36653>>>            Set psCSSClass to "TilesGroup"
36654>>>    
36654>>>            Object oWelcomeTile is a cWebHtmlBox
36656>>>                Set piColumnSpan to 6
36657>>>                Set psCSSClass to "Tile Light"
36658>>>                Set psHtml to '<div Class="WebCon_Sizer"><div class="Tile_Title">Welcome</div><div Class="Tile_Subtitle">--</div></div>'
36659>>>    
36659>>>                Procedure OnLoad
36662>>>                    Send UpdateHTML ('<div class="WebCon_Sizer">' + ;                                     '<div class="Tile_Title">Welcome</div>' +;                                     '<div class="Tile_Subtitle">' - htmlEncode(psUserName(ghoWebSessionManager)) - '</div>' +;                                     '</div>')
36663>>>                End_Procedure
36664>>>                
36664>>>            End_Object
36665>>>    
36665>>>            Object oTile2 is a cWebHtmlBox
36667>>>                Set pbServerOnClick to True
36668>>>                Set piColumnSpan to 6
36669>>>                Set piColumnIndex to 6
36670>>>                Set psCSSClass to "Tile LightAlternate"
36671>>>                Set psHtml to '<div class="WebCon_Sizer" data-ServerOnClick="openview"><div Class="Tile_Title">Tile 2</div><div class="Tile_Subtitle"></div></div>'
36672>>>                                
36672>>>                // WebRegisterPath ntNavigateForwardCustom oYourViewName
36672>>>                
36672>>>                Procedure OnClick String sId String sParam
36675>>>                    Send NavigatePath
36676>>>                End_Procedure
36677>>>                
36677>>>            End_Object
36678>>>    
36678>>>            Object oTile3 is a cWebHtmlBox
36680>>>                Set pbServerOnClick to True
36681>>>                Set piColumnSpan to 6
36682>>>                Set psCSSClass to "Tile Dark"
36683>>>                Set psHtml to '<div class="WebCon_Sizer" data-ServerOnClick="openview"><div Class="Tile_Title">Tile 3</div><div class="Tile_Subtitle"></div></div>'
36684>>>    
36684>>>                // WebRegisterPath ntNavigateForwardCustom oYourViewName
36684>>>                
36684>>>                Procedure OnClick String sId String sParam
36687>>>                    Send NavigatePath
36688>>>                End_Procedure
36689>>>                
36689>>>            End_Object
36690>>>    
36690>>>            Object oTile4 is a cWebHtmlBox
36692>>>                Set pbServerOnClick to True
36693>>>                Set piColumnSpan to 6
36694>>>                Set piColumnIndex to 6
36695>>>                Set psCSSClass to "Tile DarkAlternate"
36696>>>                Set psHtml to '<div class="WebCon_Sizer" data-ServerOnClick="openview"><div Class="Tile_Title">Tile 4</div><div class="Tile_Subtitle"></div></div>'
36697>>>            
36697>>>                // WebRegisterPath ntNavigateForwardCustom oYourViewName
36697>>>                
36697>>>                Procedure OnClick String sId String sParam
36700>>>                    Send NavigatePath
36701>>>                End_Procedure
36702>>>                
36702>>>            End_Object
36703>>>        End_Object
36704>>>    
36704>>>    End_Object
36705>>>    
36705>>>    Procedure OnBeforeShow
36708>>>        // Each time this view is shown we will update the appropriate information.
36708>>>    End_Procedure
36709>>>
36709>>>End_Object
36710>    Use ZoomPerson.wo
Including file: ZoomPerson.wo    (D:\DataFlex Projects\Quickstart\AppSrc\ZoomPerson.wo)
36710>>>// D:\DataFlex Projects\Quickstart\AppSrc\ZoomPerson.wo
36710>>>// ZoomPerson
36710>>>//
36710>>>
36710>>>Use cWebView.pkg
36710>>>Use cWebPanel.pkg
36710>>>Use cWebMenuGroup.pkg
36710>>>Use cWebMenuItem.pkg
36710>>>Use cWebForm.pkg
36710>>>Use cWebTabContainer.pkg
36710>>>Use cWebTabPage.pkg
36710>>>Use cWebEdit.pkg
36710>>>
36710>>>Use cPersonDataDictionary.dd
Including file: cPersonDataDictionary.dd    (D:\DataFlex Projects\Quickstart\DDSrc\cPersonDataDictionary.dd)
36710>>>>>Use DataDict.pkg
36710>>>>>
36710>>>>>Open Person
Including file: Person.fd    (D:\DataFlex Projects\Quickstart\DDSrc\Person.fd)
36712>>>>>Open Media
Including file: Media.fd    (D:\DataFlex Projects\Quickstart\DDSrc\Media.fd)
36714>>>>>
36714>>>>>Class cPersonDataDictionary is a DataDictionary
36715>>>>>    
36715>>>>>    Procedure Construct_Object
36717>>>>>        Forward Send Construct_Object
36719>>>>>        Set Main_File to Person.File_Number
36720>>>>>
36720>>>>>        Set Add_Client_File to Media.File_Number
36721>>>>>
36721>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
36722>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
36723>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
36724>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
36725>>>>>
36725>>>>>        Set Key_Field_State Field Person.PersonId to True
36726>>>>>
36726>>>>>        Set Field_Label_Short Field Person.LastName to "Last name"
36727>>>>>        Set Field_Option Field Person.LastName DD_REQUIRED to True
36728>>>>>
36728>>>>>        Set Field_Label_Short Field Person.FirstName to "First name"
36729>>>>>        Set Field_Option Field Person.FirstName DD_REQUIRED to True
36730>>>>>
36730>>>>>    End_Procedure
36731>>>>>
36731>>>>>End_Class
36732>>>
36732>>>Object oZoomPerson is a cWebView
36734>>>    Set piColumnCount to 12
36735>>>    Set psCaption to "Person Info"
36736>>>    Set peWebViewStyle to wvsDrilldown
36737>>>    Set peViewType to vtZoom
36738>>>    Set pbShowCaption to False
36739>>>    Set Verify_Save_Msg to 0
36740>>>    Set piMaxWidth to 1024
36741>>>
36741>>>    Object oPerson_DD is a cPersonDataDictionary
36743>>>    End_Object 
36744>>>
36744>>>    Set Main_DD To oPerson_DD
36745>>>    Set Server  To oPerson_DD
36746>>>
36746>>>
36746>>>    Object oWebMainPanel is a cWebPanel
36748>>>        Set piColumnCount to 12
36749>>>
36749>>>        Object oPersonFirstName is a cWebForm
36751>>>            Entry_Item Person.FirstName
36752>>>            Set piColumnSpan to 6
36753>>>            Set piColumnIndex to 0
36754>>>            Set peLabelPosition to lpTop
36755>>>            Set psLabel to "First name"
36756>>>        End_Object 
36757>>>        WebSetResponsive piColumnCount rmMobile to 4
36758>>>
36758>>>        Object oPersonLastName is a cWebForm
36760>>>            Entry_Item Person.LastName
36761>>>            Set piColumnSpan to 6
36762>>>            Set piColumnIndex to 6
36763>>>            Set peLabelPosition to lpTop
36764>>>            Set psLabel to "Last name"
36765>>>        End_Object 
36766>>>
36766>>>        Object oWebTabContainer is a cWebTabContainer
36768>>>            Set pbFillHeight to True
36769>>>            Set piColumnSpan to 12
36770>>>            Set pbShowLabel to False
36771>>>
36771>>>            Object oPage1 is a cWebTabPage
36773>>>                Set piColumnCount to 12
36774>>>                Set psCaption to "Contact"
36775>>>                WebSetResponsive piColumnCount rmMobile to 4
36776>>>
36776>>>                Object oPersonAddress is a cWebForm
36778>>>                    Entry_Item Person.Address
36779>>>                    Set piColumnSpan to 12
36780>>>                    Set piColumnIndex to 0
36781>>>                    Set peLabelPosition to lpTop
36782>>>                    Set psLabel to "Address"
36783>>>                End_Object 
36784>>>
36784>>>                Object oPersonZip is a cWebForm
36786>>>                    Entry_Item Person.Zip
36787>>>                    Set piColumnSpan to 7
36788>>>                    Set piColumnIndex to 0
36789>>>                    Set peLabelPosition to lpTop
36790>>>                    Set psLabel to "Zip"
36791>>>                End_Object 
36792>>>
36792>>>                Object oPersonCity is a cWebForm
36794>>>                    Entry_Item Person.City
36795>>>                    Set piColumnSpan to 11
36796>>>                    Set piColumnIndex to 0
36797>>>                    Set peLabelPosition to lpTop
36798>>>                    Set psLabel to "City"
36799>>>                End_Object 
36800>>>
36800>>>                Object oPersonPhone is a cWebForm
36802>>>                    Entry_Item Person.Phone
36803>>>                    Set piColumnSpan to 5
36804>>>                    Set piColumnIndex to 0
36805>>>                    Set peLabelPosition to lpTop
36806>>>                    Set psLabel to "Phone"
36807>>>                End_Object 
36808>>>            End_Object 
36809>>>
36809>>>            Object oPage2 is a cWebTabPage
36811>>>                Set piColumnCount to 12
36812>>>                Set psCaption to "Comments"
36813>>>                WebSetResponsive piColumnCount rmMobile to 4
36814>>>
36814>>>                Object oPersonComments is a cWebEdit
36816>>>                    Entry_Item Person.Comments
36817>>>                    Set piColumnSpan to 0
36818>>>                    Set piColumnIndex to 0
36819>>>                    Set peLabelPosition to lpTop
36820>>>                    Set psLabel to "Comments"
36821>>>                    Set piMinHeight to 150
36822>>>                    Set pbFillHeight to True
36823>>>                End_Object 
36824>>>            End_Object 
36825>>>        End_Object 
36826>>>    End_Object 
36827>>>
36827>>>    Object oActionGroup is a cWebMenuGroup
36829>>>
36829>>>        Object oSaveBtn is a cWebMenuItem
36831>>>            Set psCSSClass to "WebSaveMenuItem"
36832>>>            Set psCaption to "Save"
36833>>>
36833>>>            Procedure OnClick
36836>>>                Send Request_Save
36837>>>            End_Procedure
36838>>>
36838>>>        End_Object 
36839>>>
36839>>>        Object oEditBtn is a cWebMenuItem
36841>>>            Set psCSSClass to "WebEditMenuItem"
36842>>>            Set psCaption to "Edit"
36843>>>            Procedure OnClick
36846>>>                Send ChangeEditMode True
36847>>>                Send SetActionButtons
36848>>>            End_Procedure
36849>>>
36849>>>        End_Object 
36850>>>
36850>>>        Object oDeleteBtn is a cWebMenuItem
36852>>>            Set psCSSClass to "WebDeleteMenuItem"
36853>>>            Set psCaption to "Delete"
36854>>>            Set peActionDisplay to adMenu
36855>>>
36855>>>            Procedure OnClick
36858>>>                Send Request_Delete
36859>>>            End_Procedure
36860>>>
36860>>>        End_Object 
36861>>>
36861>>>        Object oCancelChangesBtn is a cWebMenuItem
36863>>>            Set psCSSClass to "WebIcon_Refresh"
36864>>>            Set psCaption to "Clear Changes"
36865>>>            Set peActionDisplay to adMenu
36866>>>            Procedure OnClick
36869>>>                Send RefreshRecord
36870>>>            End_Procedure
36871>>>
36871>>>        End_Object 
36872>>>    End_Object 
36873>>>
36873>>>    Procedure SetActionButtons
36876>>>        tWebNavigateData NavigateData
36876>>>        tWebNavigateData NavigateData
36876>>>        Boolean bHasRecord
36876>>>        Handle hoDD
36876>>>
36876>>>        Get Server to hoDD
36877>>>        Get GetNavigateData to NavigateData
36878>>>        Get HasRecord of hoDD to bHasRecord
36879>>>
36879>>>        // let's hide all buttons and then Show the ones we want
36879>>>        WebSet pbRender of oEditBtn to False
36880>>>        WebSet pbRender of oSaveBtn to False
36881>>>        WebSet pbRender of oCancelChangesBtn to False
36882>>>        WebSet pbRender of oDeleteBtn to False
36883>>>
36883>>>        If (NavigateData.bReadOnly) Begin
36885>>>            WebSet pbRender of oEditBtn to True
36886>>>        End
36886>>>>
36886>>>        Else Begin
36887>>>            WebSet pbRender of oSaveBtn to True
36888>>>            WebSet pbRender of oCancelChangesBtn to True
36889>>>            WebSet pbRender of oDeleteBtn to bHasRecord
36890>>>        End
36890>>>>
36890>>>    End_Procedure
36891>>>
36891>>>    Procedure OnViewSaved Handle hoServer Boolean bChanged
36894>>>        // Close after save
36894>>>        Send NavigateClose Self
36895>>>    End_Procedure
36896>>>
36896>>>    // this will close the view after a delete
36896>>>    Procedure OnViewDeleted Handle hoDDO
36899>>>        Send NavigateClose Self
36900>>>    End_Procedure
36901>>>
36901>>>    Procedure OnNavigateForward tWebNavigateData NavigateData Integer hoInvokingView Integer hoInvokingObject
36904>>>        Case Begin
36904>>>            Case (NavigateData.eNavigateType = nfFromMain)
36906>>>                // If from main, this is a propbably a main file Select to Zoom.
36906>>>                Case Break
36907>>>
36907>>>            Case (NavigateData.eNavigateType = nfFromParent)
36910>>>                // If from parent, this is a constrained drill down.
36910>>>                Case Break
36911>>>
36911>>>            Case (NavigateData.eNavigateType = nfFromChild)
36914>>>                // If from child, this is a probably a parent Zoom from a Zoom.
36914>>>                Case Break
36915>>>
36915>>>            Case Else // must be nfUndefined
36915>>>
36915>>>        Case End
36915>>>
36915>>>        Send SetActionButtons
36916>>>
36916>>>    End_Procedure
36917>>>
36917>>>End_Object 
36918>    Use SelectPerson.wo
Including file: SelectPerson.wo    (D:\DataFlex Projects\Quickstart\AppSrc\SelectPerson.wo)
36918>>>// D:\DataFlex Projects\Quickstart\AppSrc\SelectPerson.wo
36918>>>// Person
36918>>>//
36918>>>
36918>>>Use cWebView.pkg
36918>>>Use cWebList.pkg
36918>>>Use cWebMenuGroup.pkg
36918>>>Use cWebMenuItem.pkg
36918>>>Use cWebColumnButton.pkg
36918>>>Use cWebColumn.pkg
36918>>>Use ZoomPerson.wo
36918>>>Use cPersonDataDictionary.dd
36918>>>
36918>>>Object oSelectPerson is a cWebView
36920>>>    Set psCaption to "Persons List"
36921>>>    Set peWebViewStyle to wvsDrilldown
36922>>>    Set peViewType to vtSelect
36923>>>    Set piColumnCount to 12
36924>>>    Set pbShowCaption to False
36925>>>    Set piMaxWidth to 1024
36926>>>
36926>>>    Object oPerson_DD is a cPersonDataDictionary
36928>>>    End_Object 
36929>>>
36929>>>    Set Main_DD to oPerson_DD
36930>>>    Set Server  to oPerson_DD
36931>>>
36931>>>
36931>>>    Object oList is a cWebList
36933>>>        Set piColumnSpan to 0
36934>>>        Set psCSSClass to "MobileList"
36935>>>        Set pbServerOnRowClick to True
36936>>>        Set pbFillHeight to True
36937>>>        Set pbShowHeader to False
36938>>>        Set piSortColumn to 0
36939>>>
36939>>>        Object oPersonLastName is a cWebColumn
36941>>>            Entry_Item Person.LastName
36942>>>            Set psCaption to "Person.LastName"
36943>>>            Set piWidth to 435
36944>>>            Set psCSSClass to "RowCaption"
36945>>>        End_Object 
36946>>>
36946>>>        Object oPersonFirstName is a cWebColumn
36948>>>            Entry_Item Person.FirstName
36949>>>            Set psCaption to "Person.FirstName"
36950>>>            Set piWidth to 435
36951>>>            Set psCSSClass to "RowCaption"
36952>>>        End_Object 
36953>>>
36953>>>        Object oDetailButton is a cWebColumnButton
36955>>>            Set psCaption to "btn"
36956>>>            Set piWidth to 45
36957>>>            Set pbFixedWidth to True
36958>>>            Set pbResizable to False
36959>>>            Set piListRowSpan to 2
36960>>>            Set psBtnCssClass to "WebButtonIcon WebIcon_Info"
36961>>>            Set peAlign to alignRight
36962>>>
36962>>>            WebRegisterPath ntNavigateForward oZoomPerson
36968>>>
36968>>>            Procedure OnClick
36971>>>                Send NavigatePath
36972>>>            End_Procedure
36973>>>
36973>>>            Procedure OnGetNavigateForwardData tWebNavigateData ByRef NavigateData Handle hoToView
36976>>>                Move True to NavigateData.bReadOnly
36977>>>            End_Procedure
36978>>>
36978>>>        End_Object 
36979>>>
36979>>>        Object oPersonCity is a cWebColumn
36981>>>            Entry_Item Person.City
36982>>>            Set psCaption to "Person.City"
36983>>>            Set piWidth to 652
36984>>>            Set piListColSpan to 2
36985>>>            Set pbNewLine to True
36986>>>            Set psCSSClass to "RowDetail"
36987>>>        End_Object 
36988>>>
36988>>>        WebRegisterPath ntNavigateForward oSelectMedia
36994>>>
36994>>>        Procedure OnRowClick String sRowId
36997>>>            tWebNavigateData NavigateData
36997>>>            tWebNavigateData NavigateData
36997>>>            Get GetNavigateData to NavigateData
36998>>>
36998>>>            Case Begin
36998>>>                Case (NavigateData.eNavigateType = nfFromParent)
37000>>>
37000>>>                    Send NavigateForward of oSelectMedia Self
37001>>>                    Case Break
37002>>>
37002>>>                Case (NavigateData.eNavigateType = nfFromChild)
37005>>>                    Send NavigateClose Self
37006>>>                    Case Break
37007>>>
37007>>>                Case (NavigateData.eNavigateType = nfFromMain)
37010>>>                    Send NavigateClose Self
37011>>>                    Case Break
37012>>>
37012>>>                Case Else // must be nfUndefined
37012>>>                    Send NavigateForward of oSelectMedia Self
37013>>>
37013>>>            Case End
37013>>>        End_Procedure
37014>>>
37014>>>        Procedure OnGetNavigateForwardData tWebNavigateData ByRef NavigateData Handle hoToView
37017>>>            Move True to NavigateData.bReadOnly
37018>>>        End_Procedure
37019>>>
37019>>>    End_Object 
37020>>>
37020>>>    Object oActionGroup is a cWebMenuGroup
37022>>>
37022>>>        Object oSearch is a cWebMenuItem
37024>>>            Set psCSSClass to "WebPromptMenuItem"
37025>>>            Set psCaption to "Search"
37026>>>
37026>>>            Procedure OnClick
37029>>>                Send Search of oList
37030>>>            End_Procedure
37031>>>
37031>>>        End_Object 
37032>>>
37032>>>        Object oNewButton is a cWebMenuItem
37034>>>            Set psCSSClass to "WebClearMenuItem"
37035>>>            Set psCaption to "New"
37036>>>
37036>>>            WebRegisterPath ntNavigateForward oZoomPerson
37042>>>
37042>>>            Procedure OnClick
37045>>>                Send NavigatePath
37046>>>            End_Procedure
37047>>>
37047>>>            Procedure OnGetNavigateForwardData tWebNavigateData ByRef NavigateData Handle hoToView
37050>>>                Move True to NavigateData.bNewRecord
37051>>>            End_Procedure
37052>>>
37052>>>        End_Object 
37053>>>    End_Object 
37054>>>
37054>>>    Procedure OnNavigateForward tWebNavigateData NavigateData Integer hoInvokingView Integer hoInvokingObject
37057>>>        WebSet pbRender of oNewButton to True
37058>>>        WebSet pbRender of oDetailButton to True
37059>>>
37059>>>        Case Begin
37059>>>            Case (NavigateData.eNavigateType = nfFromParent)
37061>>>                // If from parent, this is a constrained drill down
37061>>>                Case Break
37062>>>
37062>>>            Case (NavigateData.eNavigateType = nfFromChild)
37065>>>                // If from child, this is a probably a parent lookup from a Zoom
37065>>>                Case Break
37066>>>
37066>>>            Case (NavigateData.eNavigateType = nfFromMain)
37069>>>                // If from main, this is a probably a main-file lookup from a Zoom
37069>>>                WebSet pbRender of oDetailButton to False
37070>>>                Case Break
37071>>>
37071>>>            Case Else // must be nfUndefined
37071>>>                // This may be the start of a drilldown query or this may be used for some kind of custom query.
37071>>>
37071>>>        Case End
37071>>>
37071>>>    End_Procedure
37072>>>
37072>>>
37072>>>End_Object 
37073>    Use ZoomMedia.wo
Including file: ZoomMedia.wo    (D:\DataFlex Projects\Quickstart\AppSrc\ZoomMedia.wo)
37073>>>// D:\DataFlex Projects\Quickstart\AppSrc\ZoomMedia.wo
37073>>>// Media
37073>>>//
37073>>>
37073>>>Use cWebView.pkg
37073>>>Use cWebPanel.pkg
37073>>>Use cWebMenuGroup.pkg
37073>>>Use cWebMenuItem.pkg
37073>>>Use cWebForm.pkg
37073>>>Use cWebCombo.pkg
37073>>>Use cWebGroup.pkg
37073>>>Use SelectPerson.wo
37073>>>
37073>>>Use cPersonDataDictionary.dd
37073>>>Use cMediaDataDictionary.dd
Including file: cMediaDataDictionary.dd    (D:\DataFlex Projects\Quickstart\DDSrc\cMediaDataDictionary.dd)
37073>>>>>Use DataDict.pkg
37073>>>>>
37073>>>>>Open Media
37075>>>>>Open Person
37077>>>>>
37077>>>>>Object MediaTypes is a DescriptionValidationTable
37079>>>>>    Procedure Fill_List
37082>>>>>        Forward Send Fill_List
37084>>>>>        Send Add_Table_Value "IMAGE" "Image file"
37085>>>>>        Send Add_Table_Value "AUDIO" "Audio file"
37086>>>>>        Send Add_Table_Value "VIDEO" "Video file"
37087>>>>>        Send Add_Table_Value "BOOK" "Book PDF"
37088>>>>>    End_Procedure
37089>>>>>End_Object
37090>>>>>
37090>>>>>Class cMediaDataDictionary is a DataDictionary
37091>>>>>    
37091>>>>>    Procedure Construct_Object
37093>>>>>        Forward Send Construct_Object
37095>>>>>        Set Main_File to Media.File_Number
37096>>>>>
37096>>>>>        Set Add_Server_File to Person.File_Number
37097>>>>>
37097>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
37098>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
37099>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
37100>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
37101>>>>>
37101>>>>>        Set Key_Field_State Field Media.MediaId to True
37102>>>>>
37102>>>>>        Set Field_Option Field Media.Title DD_REQUIRED to True
37103>>>>>
37103>>>>>        Set Field_Value_Table Field Media.Type to MediaTypes
37104>>>>>        Set Field_Class_Name Field Media.Type to "Combo"
37105>>>>>
37105>>>>>        Set Field_Label_Short Field Media.PurchaseDate to "Purchase date"
37106>>>>>
37106>>>>>        Set Field_Mask_Type Field Media.Price to Mask_Currency_Window
37107>>>>>
37107>>>>>    End_Procedure
37108>>>>>
37108>>>>>End_Class
37109>>>Use cWebDateForm.pkg
37109>>>
37109>>>Object oZoomMedia is a cWebView
37111>>>    Set piColumnCount to 12
37112>>>    Set psCaption to "Media"
37113>>>    Set peWebViewStyle to wvsDrilldown
37114>>>    Set peViewType to vtZoom
37115>>>    Set pbShowCaption to False
37116>>>    Set Verify_Save_Msg to 0
37117>>>    Set piMaxWidth to 1024
37118>>>
37118>>>    Object oPerson_DD is a cPersonDataDictionary
37120>>>    End_Object 
37121>>>
37121>>>    Object oMedia_DD is a cMediaDataDictionary
37123>>>        Set DDO_Server To oPerson_DD
37124>>>    End_Object 
37125>>>
37125>>>    Set Main_DD To oMedia_DD
37126>>>    Set Server  To oMedia_DD
37127>>>
37127>>>
37127>>>    Object oWebMainPanel is a cWebPanel
37129>>>        Set piColumnCount to 12
37130>>>
37130>>>        Object oWebGroup1 is a cWebGroup
37132>>>            Set piColumnSpan to 0
37133>>>            Set piColumnIndex to 0
37134>>>            Set piColumnCount to 12
37135>>>            Set psCaption to "Person"
37136>>>            WebSetResponsive piColumnCount rmMobile to 4
37137>>>
37137>>>            Object oPersonLastName is a cWebForm
37139>>>                Entry_Item Person.LastName
37140>>>                Set piColumnSpan to 8
37141>>>                Set piColumnIndex to 0
37142>>>                Set peLabelPosition to lpTop
37143>>>                Set psLabel to "Last name"
37144>>>                Set pbPromptButton to True
37145>>>
37145>>>                WebRegisterPath ntNavigateForward oSelectPerson
37151>>>
37151>>>                Procedure OnPrompt
37154>>>                    Send NavigatePath
37155>>>                End_Procedure
37156>>>            End_Object 
37157>>>
37157>>>            Object oPerson_FirstName is a cWebForm
37159>>>                Entry_Item Person.FirstName
37160>>>
37160>>>                Set Server to oMedia_DD
37161>>>                Set piColumnSpan to 0
37162>>>                Set psLabel to "FirstName"
37163>>>                Set peLabelPosition to lpTop
37164>>>            End_Object
37165>>>        End_Object 
37166>>>        WebSetResponsive piColumnCount rmMobile to 4
37167>>>
37167>>>        Object oMediaTitle is a cWebForm
37169>>>            Entry_Item Media.Title
37170>>>            Set piColumnSpan to 12
37171>>>            Set piColumnIndex to 0
37172>>>            Set peLabelPosition to lpTop
37173>>>            Set psLabel to "Title"
37174>>>        End_Object 
37175>>>
37175>>>        Object oMediaAuthor is a cWebForm
37177>>>            Entry_Item Media.Author
37178>>>            Set piColumnSpan to 11
37179>>>            Set piColumnIndex to 0
37180>>>            Set peLabelPosition to lpTop
37181>>>            Set psLabel to "Author"
37182>>>        End_Object 
37183>>>
37183>>>        Object oMediaType is a cWebCombo
37185>>>            Entry_Item Media.Type
37186>>>            Set piColumnSpan to 2
37187>>>            Set piColumnIndex to 0
37188>>>            Set peLabelPosition to lpTop
37189>>>            Set psLabel to "Type"
37190>>>        End_Object 
37191>>>
37191>>>        Object oWebDateForm1 is a cWebDateForm
37193>>>            Entry_Item Media.PurchaseDate
37194>>>            Set piColumnSpan to 4
37195>>>            Set psLabel to "Purchased date"
37196>>>            Set peLabelPosition to lpTop
37197>>>        End_Object
37198>>>
37198>>>        Object oMedia_Price is a cWebForm
37200>>>            Entry_Item Media.Price
37201>>>            Set piColumnSpan to 4
37202>>>            Set psLabel to "Price"
37203>>>            Set peLabelPosition to lpTop
37204>>>            Set piColumnIndex to 4
37205>>>        End_Object
37206>>>    End_Object 
37207>>>
37207>>>    Object oActionGroup is a cWebMenuGroup
37209>>>
37209>>>        Object oSaveBtn is a cWebMenuItem
37211>>>            Set psCSSClass to "WebSaveMenuItem"
37212>>>            Set psCaption to "Save"
37213>>>
37213>>>            Procedure OnClick
37216>>>                Send Request_Save
37217>>>            End_Procedure
37218>>>
37218>>>        End_Object 
37219>>>
37219>>>        Object oEditBtn is a cWebMenuItem
37221>>>            Set psCSSClass to "WebEditMenuItem"
37222>>>            Set psCaption to "Edit"
37223>>>            Procedure OnClick
37226>>>                Send ChangeEditMode True
37227>>>                Send SetActionButtons
37228>>>            End_Procedure
37229>>>
37229>>>        End_Object 
37230>>>
37230>>>        Object oDeleteBtn is a cWebMenuItem
37232>>>            Set psCSSClass to "WebDeleteMenuItem"
37233>>>            Set psCaption to "Delete"
37234>>>            Set peActionDisplay to adMenu
37235>>>
37235>>>            Procedure OnClick
37238>>>                Send Request_Delete
37239>>>            End_Procedure
37240>>>
37240>>>        End_Object 
37241>>>
37241>>>        Object oCancelChangesBtn is a cWebMenuItem
37243>>>            Set psCSSClass to "WebIcon_Refresh"
37244>>>            Set psCaption to "Clear Changes"
37245>>>            Set peActionDisplay to adMenu
37246>>>            Procedure OnClick
37249>>>                Send RefreshRecord
37250>>>            End_Procedure
37251>>>
37251>>>        End_Object 
37252>>>    End_Object 
37253>>>
37253>>>    Procedure SetActionButtons
37256>>>        tWebNavigateData NavigateData
37256>>>        tWebNavigateData NavigateData
37256>>>        Boolean bHasRecord
37256>>>        Handle hoDD
37256>>>
37256>>>        Get Server to hoDD
37257>>>        Get GetNavigateData to NavigateData
37258>>>        Get HasRecord of hoDD to bHasRecord
37259>>>
37259>>>        // let's hide all buttons and then Show the ones we want
37259>>>        WebSet pbRender of oEditBtn to False
37260>>>        WebSet pbRender of oSaveBtn to False
37261>>>        WebSet pbRender of oCancelChangesBtn to False
37262>>>        WebSet pbRender of oDeleteBtn to False
37263>>>
37263>>>        If (NavigateData.bReadOnly) Begin
37265>>>            WebSet pbRender of oEditBtn to True
37266>>>        End
37266>>>>
37266>>>        Else Begin
37267>>>            WebSet pbRender of oSaveBtn to True
37268>>>            WebSet pbRender of oCancelChangesBtn to True
37269>>>            WebSet pbRender of oDeleteBtn to bHasRecord
37270>>>        End
37270>>>>
37270>>>    End_Procedure
37271>>>
37271>>>    Procedure OnViewSaved Handle hoServer Boolean bChanged
37274>>>        // Close after save
37274>>>        Send NavigateClose Self
37275>>>    End_Procedure
37276>>>
37276>>>    // this will close the view after a delete
37276>>>    Procedure OnViewDeleted Handle hoDDO
37279>>>        Send NavigateClose Self
37280>>>    End_Procedure
37281>>>
37281>>>    Procedure OnNavigateForward tWebNavigateData NavigateData Integer hoInvokingView Integer hoInvokingObject
37284>>>        Case Begin
37284>>>            Case (NavigateData.eNavigateType = nfFromMain)
37286>>>                // If from main, this is a propbably a main file Select to Zoom.
37286>>>                Case Break
37287>>>
37287>>>            Case (NavigateData.eNavigateType = nfFromParent)
37290>>>                // If from parent, this is a constrained drill down.
37290>>>                Case Break
37291>>>
37291>>>            Case (NavigateData.eNavigateType = nfFromChild)
37294>>>                // If from child, this is a probably a parent Zoom from a Zoom.
37294>>>                Case Break
37295>>>
37295>>>            Case Else // must be nfUndefined
37295>>>
37295>>>        Case End
37295>>>
37295>>>        Send SetActionButtons
37296>>>
37296>>>    End_Procedure
37297>>>
37297>>>End_Object 
37298>    Use SelectMedia.wo
Including file: SelectMedia.wo    (D:\DataFlex Projects\Quickstart\AppSrc\SelectMedia.wo)
37298>>>// D:\DataFlex Projects\Quickstart\AppSrc\SelectMedia.wo
37298>>>// Media list
37298>>>//
37298>>>
37298>>>Use cWebView.pkg
37298>>>Use cWebList.pkg
37298>>>Use cWebMenuGroup.pkg
37298>>>Use cWebMenuItem.pkg
37298>>>Use cWebColumnButton.pkg
37298>>>Use cWebColumn.pkg
37298>>>Use ZoomMedia.wo
37298>>>
37298>>>Use cPersonDataDictionary.dd
37298>>>Use cMediaDataDictionary.dd
37298>>>
37298>>>Object oSelectMedia is a cWebView
37300>>>    Set psCaption to "Media list"
37301>>>    Set peWebViewStyle to wvsDrilldown
37302>>>    Set peViewType to vtSelect
37303>>>    Set piColumnCount to 12
37304>>>    Set pbShowCaption to False
37305>>>    Set piMaxWidth to 1024
37306>>>
37306>>>    Object oPerson_DD is a cPersonDataDictionary
37308>>>    End_Object 
37309>>>
37309>>>    Object oMedia_DD is a cMediaDataDictionary
37311>>>        Set DDO_Server To oPerson_DD
37312>>>    End_Object 
37313>>>
37313>>>    Set Main_DD To oMedia_DD
37314>>>    Set Server  To oMedia_DD
37315>>>
37315>>>
37315>>>    Object oList is a cWebList
37317>>>        Set piColumnSpan to 0
37318>>>        Set psCSSClass to "MobileList"
37319>>>        Set pbServerOnRowClick to True
37320>>>        Set pbFillHeight to True
37321>>>        Set pbShowHeader to False
37322>>>        Set piSortColumn to 0
37323>>>
37323>>>        Object oMediaTitle is a cWebColumn
37325>>>            Entry_Item Media.Title
37326>>>            Set psCaption to "Media.Title"
37327>>>            Set piWidth to 1087
37328>>>            Set piListColSpan to 2
37329>>>            Set psCSSClass to "RowCaption"
37330>>>        End_Object 
37331>>>
37331>>>        Object oDetailButton is a cWebColumnButton
37333>>>            Set psCaption to "btn"
37334>>>            Set piWidth to 45
37335>>>            Set pbFixedWidth to True
37336>>>            Set pbResizable to False
37337>>>            Set piListRowSpan to 3
37338>>>            Set psBtnCssClass to "WebButtonIcon WebIcon_Info"
37339>>>            Set peAlign to alignRight
37340>>>
37340>>>            WebRegisterPath ntNavigateForward oZoomMedia
37346>>>
37346>>>            Procedure OnClick
37349>>>                Send NavigatePath
37350>>>            End_Procedure
37351>>>
37351>>>            Procedure OnGetNavigateForwardData tWebNavigateData ByRef NavigateData Handle hoToView
37354>>>                Move True to NavigateData.bReadOnly
37355>>>            End_Procedure
37356>>>
37356>>>        End_Object 
37357>>>
37357>>>        Object oMediaAuthor is a cWebColumn
37359>>>            Entry_Item Media.Author
37360>>>            Set psCaption to "Media.Author"
37361>>>            Set piWidth to 652
37362>>>            Set piListColSpan to 2
37363>>>            Set pbNewLine to True
37364>>>        End_Object 
37365>>>
37365>>>        Object oPersonLastName is a cWebColumn
37367>>>            Entry_Item Person.LastName
37368>>>            Set psCaption to "Person.LastName"
37369>>>            Set piWidth to 435
37370>>>            Set pbNewLine to True
37371>>>            Set psCSSClass to "RowDetail"
37372>>>        End_Object 
37373>>>
37373>>>        Object oPersonFirstName is a cWebColumn
37375>>>            Entry_Item Person.FirstName
37376>>>            Set psCaption to "Person.FirstName"
37377>>>            Set piWidth to 435
37378>>>            Set psCSSClass to "RowDetail"
37379>>>        End_Object 
37380>>>
37380>>>        WebRegisterPath ntNavigateForward oZoomMedia
37386>>>
37386>>>        Procedure OnRowClick String sRowId
37389>>>            tWebNavigateData NavigateData
37389>>>            tWebNavigateData NavigateData
37389>>>            Get GetNavigateData to NavigateData
37390>>>
37390>>>            Case Begin
37390>>>                Case (NavigateData.eNavigateType = nfFromParent)
37392>>>                    Send NavigateForward of oZoomMedia Self
37393>>>                    Case Break
37394>>>
37394>>>                Case (NavigateData.eNavigateType = nfFromChild)
37397>>>                    Send NavigateClose Self
37398>>>                    Case Break
37399>>>
37399>>>                Case (NavigateData.eNavigateType = nfFromMain)
37402>>>                    Send NavigateClose Self
37403>>>                    Case Break
37404>>>
37404>>>                Case Else // must be nfUndefined
37404>>>                    Send NavigateForward of oZoomMedia Self
37405>>>
37405>>>            Case End
37405>>>        End_Procedure
37406>>>
37406>>>        Procedure OnGetNavigateForwardData tWebNavigateData ByRef NavigateData Handle hoToView
37409>>>            Move True to NavigateData.bReadOnly
37410>>>        End_Procedure
37411>>>
37411>>>    End_Object 
37412>>>
37412>>>    Object oActionGroup is a cWebMenuGroup
37414>>>
37414>>>        Object oSearch is a cWebMenuItem
37416>>>            Set psCSSClass to "WebPromptMenuItem"
37417>>>            Set psCaption to "Search"
37418>>>
37418>>>            Procedure OnClick
37421>>>                Send Search of oList
37422>>>            End_Procedure
37423>>>
37423>>>        End_Object 
37424>>>
37424>>>        Object oNewButton is a cWebMenuItem
37426>>>            Set psCSSClass to "WebClearMenuItem"
37427>>>            Set psCaption to "New"
37428>>>
37428>>>            WebRegisterPath ntNavigateForward oZoomMedia
37434>>>
37434>>>            Procedure OnClick
37437>>>                Send NavigatePath
37438>>>            End_Procedure
37439>>>
37439>>>            Procedure OnGetNavigateForwardData tWebNavigateData ByRef NavigateData Handle hoToView
37442>>>                Move True to NavigateData.bNewRecord
37443>>>            End_Procedure
37444>>>
37444>>>        End_Object 
37445>>>    End_Object 
37446>>>
37446>>>    Procedure OnNavigateForward tWebNavigateData NavigateData Integer hoInvokingView Integer hoInvokingObject
37449>>>        WebSet pbRender of oNewButton to True
37450>>>        WebSet pbRender of oDetailButton to True
37451>>>
37451>>>        Case Begin
37451>>>            Case (NavigateData.eNavigateType = nfFromParent)
37453>>>                // If from parent, this is a constrained drill down
37453>>>                // If Row select does main-zoom we don't need this
37453>>>                WebSet pbRender of oDetailButton to False
37454>>>                Case Break
37455>>>
37455>>>            Case (NavigateData.eNavigateType = nfFromChild)
37458>>>                // If from child, this is a probably a parent lookup from a Zoom
37458>>>                Case Break
37459>>>
37459>>>            Case (NavigateData.eNavigateType = nfFromMain)
37462>>>                // If from main, this is a probably a main-file lookup from a Zoom
37462>>>                WebSet pbRender of oDetailButton to False
37463>>>                Case Break
37464>>>
37464>>>            Case Else // must be nfUndefined
37464>>>                // This may be the start of a drilldown query or this may be used for some kind of custom query.
37464>>>                // If Row select does main-zoom we don't need this
37464>>>                WebSet pbRender of oDetailButton to False
37465>>>
37465>>>        Case End
37465>>>
37465>>>    End_Procedure
37466>>>
37466>>>
37466>>>End_Object 
37467>    Set phoDefaultView to oDashboard
37468>
37468>End_Object
37469>
37469>Send StartWebApp of oWebApp
37470>
Summary
Memory Available: 40080637952
Total Warnings : 0
Total Errors   : 0
Total Symbols  : 24981
Total Resources: 0
Total Commands : 37469
Total Windows  : 0
Total Pages    : 0
Static Data    : 461749
Message area   : 250680
Total Blocks   : 16706
