Compiling Program: D:\DataFlex Projects\Quickstart\AppSrc\WebApp.src
Memory Available: 39967772672
1>Use AllWebAppClasses.pkg
Using pre-compiled package ALLWEBAPPCLASSES.PKG
Including file: AllWebAppClasses.x64.pkd    (D:\DataFlex 24.0\Pkg\AllWebAppClasses.x64.pkd)
36017>Use cConnection.pkg
36017>Use cWebMenuItem.pkg
36017>
36017>Object oApplication is a cApplication
36019>    Object oConnection is a cConnection
36021>        Use LoginEncryption.pkg
Including file: LoginEncryption.pkg    (D:\DataFlex 24.0\Pkg\LoginEncryption.pkg)
36021>>>Use cLoginEncryption.pkg
Including file: cLoginEncryption.pkg    (D:\DataFlex 24.0\Pkg\cLoginEncryption.pkg)
36021>>>>>Use cCryptographerEx.pkg
36021>>>>>
36021>>>>>Class cLoginEncryption is a cObject
36022>>>>>    
36022>>>>>    Procedure Construct_Object
36024>>>>>        Forward Send Construct_Object
36026>>>>>        // this must be set to a multi (40ish) character random key
36026>>>>>        Property String psEncryptPassword ""
36027>>>>>        
36027>>>>>        Object oDataCrypter is a cCryptographerEx
36029>>>>>            Set piHash to CALG_SHA_256
36030>>>>>            Set piCipher to CALG_AES_256
36031>>>>>            Set psProvider to "" //  Not providing a specific provider gives the default provider for the provider type
36032>>>>>            Set piProvider to PROV_RSA_AES
36033>>>>>        End_Object
36034>>>>>    End_Procedure
36035>>>>>    
36035>>>>>    // This can be augmented to return a password encryption key using any
36035>>>>>    // hidden mechanism desired.
36035>>>>>    Function GetEncryptionPassword Returns String
36037>>>>>        String sPassword
36037>>>>>        Get psEncryptPassword to sPassword
36038>>>>>        Function_Return sPassword
36039>>>>>    End_Function
36040>>>>>    
36040>>>>>    // Encrypts a string into an unreadable hash that can later be decrypted using DecryptKey.
36040>>>>>    //
36040>>>>>    // Params:
36040>>>>>    //   sPlainText     String to encrypt.
36040>>>>>    // Returns:
36040>>>>>    //   Base64 encoded hash.
36040>>>>>    Function EncryptPassword String sPlainText Returns String
36042>>>>>        String sEncryptPassword sBase64
36042>>>>>        UChar[] ucBinary
36043>>>>>        Pointer pBase64
36043>>>>>        Integer iVoid
36043>>>>>        
36043>>>>>        //  Encrypt Key
36043>>>>>        Get GetEncryptionPassword to sEncryptPassword
36044>>>>>        If (sEncryptPassword = "") Begin
36046>>>>>            Error DFERR_PROGRAM "No encryption password set"
36047>>>>>>
36047>>>>>        End
36047>>>>>>
36047>>>>>        
36047>>>>>        Get Encrypt of oDataCrypter (StringToUCharArray(sEncryptPassword)) (StringToUCharArray(sPlainText)) to ucBinary
36048>>>>>        
36048>>>>>        If (SizeOfArray(ucBinary) = 0) Begin
36050>>>>>            Error DFERR_PROGRAM "Unable to encrypt database login password"
36051>>>>>>
36051>>>>>            Function_Return ""
36052>>>>>        End
36052>>>>>>
36052>>>>>        
36052>>>>>        //  Encode binary hash to Base64
36052>>>>>        Move (Base64Encode(AddressOf(ucBinary), SizeOfArray(ucBinary))) to pBase64
36053>>>>>        Move (PointerToString(pBase64)) to sBase64
36054>>>>>        Move (Free(pBase64)) to iVoid
36055>>>>>        
36055>>>>>        Function_Return sBase64
36056>>>>>    End_Function
36057>>>>>    
36057>>>>>    
36057>>>>>    // Decrypts the unreadable hash generated by EncryptKey into a readable string.
36057>>>>>    //
36057>>>>>    // Params:
36057>>>>>    //   sBase64EncryptedPassword       Base64 Encrypted password
36057>>>>>    // Returns:
36057>>>>>    //   Readable plain text password
36057>>>>>    Function DecryptPassword String sBase64EncryptedPassword Returns String
36059>>>>>        String sEncryptPassword
36059>>>>>        UChar[] ucBinary ucPlain
36061>>>>>        Boolean bIsHex
36061>>>>>        Integer iLen iVoid
36061>>>>>        Pointer pBinary
36061>>>>>        
36061>>>>>        If (sBase64EncryptedPassword <> "") Begin
36063>>>>>            //  Decode from Base64
36063>>>>>            Move (Base64Decode(AddressOf(sBase64EncryptedPassword), &iLen)) to pBinary
36064>>>>>            
36064>>>>>            Move (ResizeArray(ucBinary, iLen, 0)) to ucBinary
36065>>>>>            Move (MemCopy(AddressOf(ucBinary), pBinary, iLen)) to iVoid
36066>>>>>                        
36066>>>>>            Move (Free(pBinary)) to iVoid
36067>>>>>            
36067>>>>>            //  Encrypted binary hash to string
36067>>>>>            Get GetEncryptionPassword to sEncryptPassword
36068>>>>>            Get Decrypt of oDataCrypter (StringToUCharArray(sEncryptPassword)) ucBinary to ucPlain
36069>>>>>        End
36069>>>>>>
36069>>>>>        
36069>>>>>        Function_Return (UCharArrayToString(ucPlain))
36070>>>>>    End_Function
36071>>>>>End_Class
36072>>>
36072>>>Object oLoginEncryption is a cLoginEncryption
36074>>>
36074>>>    // this must be created in your appsrc directory and must contain an encryption
36074>>>    // key that is set to psEncryptPassword. It will look something like this
36074>>>    //
36074>>>    // Set psEncryptPassword to "JchUAo7W@r.b{<Yk~OONi0nq=sMi[*Rn[A-`Vo)q"
36074>>>    //  
Including file: LoginEncryptionKey.inc    (D:\DataFlex Projects\Quickstart\AppSrc\LoginEncryptionKey.inc)
36074>>>>// Studio generated login encryption key
36074>>>>Set psEncryptPassword to "?8}/Q-)210)Swym#Q+W0hb~(gpePKQ#7^SX\x1qb"
36075>>>>
36075>>>    
36075>>>    // use this to register this object to your cConnection Object. This object
36075>>>    // must be created after the cConnection object
36075>>>    Move Self to ghoLoginEncryption
36076>>>End_Object
36077>    End_Object
36078>End_Object
36079>
36079>Object oWebApp is a cWebApp
36081>    Set psTheme to "Df_Material"
36082>    Set peAlignView to alignCenter
36083>    
36083>    // It is important to set this so that all views will default
36083>    // to drill down style views.
36083>    Set peApplicationStyle to wvsDrillDown   
36084>    Set peApplicationStateMode to asmHistoryAndUrls 
36085>    Set psEncryptPassword to "\$8hJ}-$e/Dr2A_PaZ5~6Ed(y^&7i&^h=h8#=G]:"
36086>
36086>    Object oViewStack is a cWebViewStack
36088>    End_Object
36089>    
36089>    Procedure HideHeader
36092>        WebSet pbRender of oHeaderPanel to False
36093>    End_Procedure
36094>
36094>    Procedure ShowHeader
36097>        WebSet pbRender of oHeaderPanel to True 
36098>    End_Procedure
36099>
36099>    Object oHeaderPanel is a cWebPanel
36101>        Set peRegion to prTop
36102>        Set psCSSClass to "HeaderPanel"
36103>        
36103>        Object oMenuPanel is a cWebPanel
36105>            Set peRegion to prLeft
36106>            Set piWidth to 50
36107>            
36107>            Object oMenuButton is a cWebMenuButton
36109>                Set piMenuHeight to 500
36110>
36110>                Object oDashboard_itm is a cWebMenuItem
36112>                    Set psCaption to C_$Dashboard
36113>                    
36113>                    WebRegisterPath ntNavigateBegin oDashboard
36119>
36119>                    Procedure OnClick
36122>                        Send NavigatePath
36123>                    End_Procedure
36124>                End_Object
36125>
36125>                Object oViewMenu is a cWebMenuItem
36127>                    Set psCaption to C_$View
36128>
36128>                    Object oPersonItem1 is a cWebMenuItem
36130>                        Set psCaption to "Person"
36131>
36131>                        WebRegisterPath ntNavigateBegin oSelectPerson
36137>
36137>                        Procedure OnClick
36140>                            Forward Send OnClick
36142>                                Send NavigatePath
36143>                        End_Procedure
36144>                    End_Object
36145>                End_Object
36146>
36146>                Object oSignOut_itm is a cWebMenuItem
36148>                    Set psCaption to C_$LogOut
36149>
36149>                    Procedure OnClick
36152>                        Send RequestLogOut of ghoWebSessionManager
36153>                    End_Procedure
36154>                End_Object
36155>            End_Object  
36156>
36156>            Object oBackButton is a cWebButton
36158>                Set psCSSClass to "WebBack_Icon"
36159>                Set pbRender to False
36160>                
36160>                Procedure OnClick
36163>                    Handle hoTop
36163>                    
36163>                    Get TopViewHandle of oViewStack to hoTop
36164>                    If (hoTop > 0) Begin
36166>                        Send NavigateCancel of hoTop 
36167>                    End
36167>                End_Procedure
36168>            End_Object
36169>            
36169>            Send AddClient of oViewStack Self
36170>                
36170>            Procedure OnUpdateViewStack
36173>                Handle hoTop hoDflt
36173>                Integer eMode
36173>                Boolean bTop
36173>                
36173>                WebGet peMode of (Owner(Self)) to eMode
36174>                
36174>                Get TopViewHandle of oViewStack to hoTop
36175>                Get GetDefaultView to hoDflt
36176>                Move (hoTop=0 or hoTop=hoDflt) to bTop
36177>                
36177>                WebSet pbRender of oBackButton to (not(bTop) and eMode >= rmMobile)
36178>                WebSet pbRender of oMenuButton to (bTop or eMode < rmMobile)
36179>            End_Procedure
36180>
36180>        End_Object
36181>
36181>        Object oCaptionPanel is a cWebPanel
36183>            Set piColumnCount to 12
36184>
36184>            Object oCaptionBreadcrumb is a cWebBreadcrumb
36186>                Set peBreadcrumbStyle to crumbCaption
36187>                WebSetResponsive peBreadcrumbStyle rmMobile to crumbDropDown
36188>            End_Object         
36189>        End_Object
36190>        
36190>        Object oActionPanel is a cWebPanel
36192>            Set peRegion to prRight
36193>            Set piColumnCount to 1
36194>            Set piWidth to 120
36195>
36195>            Object oMainActions is a cWebActionBar
36197>                Set psGroupName to "MainActions"
36198>
36198>                Set piColumnSpan to 0
36199>                Set peAlign to alignRight
36200>            End_Object
36201>        End_Object
36202>
36202>        Object oBreadcrumbPanel is a cWebPanel
36204>            Set peRegion to prBottom
36205>            
36205>            Object oHorizontalBreadcrumb is a cWebBreadcrumb
36207>                WebSetResponsive pbRender rmMobile to False
36208>            End_Object         
36209>        End_Object
36210>
36210>    End_Object    
36211>
36211>    Use SessionManager.wo
Including file: SessionManager.wo    (D:\DataFlex Projects\Quickstart\AppSrc\SessionManager.wo)
36211>>>Use cWebSessionManagerStandard.pkg
Including file: cWebSessionManagerStandard.pkg    (D:\DataFlex 24.0\Pkg\cWebSessionManagerStandard.pkg)
36211>>>>>Use cWebSessionManager.pkg
36211>>>>>Use cWebAppSessionDataDictionary.dd
Including file: cWebAppSessionDataDictionary.dd    (D:\DataFlex 24.0\Pkg\cWebAppSessionDataDictionary.dd)
36211>>>>>>>Use DataDict.pkg
36211>>>>>>>
36211>>>>>>>Open WebAppSession
Including file: WebAppSession.fd    (D:\DataFlex Projects\Quickstart\DDSrc\WebAppSession.fd)
36213>>>>>>>Open WebAppUser
Including file: WebAppUser.fd    (D:\DataFlex Projects\Quickstart\DDSrc\WebAppUser.fd)
36215>>>>>>>
36215>>>>>>>Class cWebAppSessionDataDictionary is a DataDictionary
36216>>>>>>>    Procedure Construct_Object
36218>>>>>>>        Forward Send Construct_Object
36220>>>>>>>
36220>>>>>>>        Set Main_File to WebAppSession.File_Number
36221>>>>>>>
36221>>>>>>>        Set Add_Server_File to WebAppUser.File_Number
36222>>>>>>>
36222>>>>>>>        Set ParentNullAllowed WebAppUser.File_Number to True
36223>>>>>>>
36223>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
36224>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
36225>>>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
36226>>>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
36227>>>>>>>
36227>>>>>>>        Set Field_Checkbox_Values Field WebAppSession.Active to "Y" "N"
36228>>>>>>>        Set Field_Error Field WebAppSession.Active to 500 "Invalid WebAppSession Active State"
36229>>>>>>>    End_Procedure
36230>>>>>>>
36230>>>>>>>    Procedure Creating
36232>>>>>>>        DateTime dtCurrentDateTime
36232>>>>>>>        
36232>>>>>>>        Forward Send Creating
36234>>>>>>>        
36234>>>>>>>        //  Init usecounter
36234>>>>>>>        Move 0 to WebAppSession.UseCount
36235>>>>>>>        
36235>>>>>>>        //  Set the creation and access time to the current time
36235>>>>>>>        Move (CurrentDateTime()) to dtCurrentDateTime
36236>>>>>>>    
36236>>>>>>>        Get TimeToString dtCurrentDateTime to WebAppSession.CreateTime
36237>>>>>>>        Get TimeToString dtCurrentDateTime to WebAppSession.LastAccessTime
36238>>>>>>>        
36238>>>>>>>        Move dtCurrentDateTime to WebAppSession.CreateDate
36239>>>>>>>        Move dtCurrentDateTime to WebAppSession.LastAccessDate
36240>>>>>>>    End_Procedure
36241>>>>>>>    
36241>>>>>>>    //
36241>>>>>>>    //  Converts the given time to an string that can be saved in the database.
36241>>>>>>>    //
36241>>>>>>>    //  Params:
36241>>>>>>>    //      dtTime  Time to convert
36241>>>>>>>    //  Returns:
36241>>>>>>>    //      String with "HH:MM:SS" format
36241>>>>>>>    //
36241>>>>>>>    Function TimeToString DateTime dtTime Returns String
36243>>>>>>>        String sHours sMinutes sSeconds
36243>>>>>>>        
36243>>>>>>>        //  Extract parts
36243>>>>>>>        Move (String(DateGetHour(dtTime))) to sHours
36244>>>>>>>        Move (String(DateGetMinute(dtTime))) to sMinutes
36245>>>>>>>        Move (String(DateGetSecond(dtTime))) to sSeconds
36246>>>>>>>        
36246>>>>>>>        //  Fill out with 0
36246>>>>>>>        If (Length(sHours) = 1) ;            Move ("0" + sHours) to sHours
36249>>>>>>>        If (Length(sMinutes) = 1) ;            Move ("0" + sMinutes) to sMinutes
36252>>>>>>>        If (Length(sSeconds) = 1) ;            Move ("0" + sSeconds) to sSeconds
36255>>>>>>>        
36255>>>>>>>        Function_Return (sHours + ":" + sMinutes + ":" + sSeconds)
36256>>>>>>>    End_Function
36257>>>>>>>    
36257>>>>>>>    //
36257>>>>>>>    //  Sets the time of the datetime variable to the time in the string.
36257>>>>>>>    //
36257>>>>>>>    //  Params:
36257>>>>>>>    //      dtTime  Datetime variable to add time to
36257>>>>>>>    //      sTimeString String with time in the format "HH:MM:SS"
36257>>>>>>>    //  Returns:
36257>>>>>>>    //      dtDateTime with the loaded time
36257>>>>>>>    //
36257>>>>>>>    Function StringToTime DateTime dtTime String sTimeString Returns DateTime
36259>>>>>>>        String sHours sMinutes sSeconds
36259>>>>>>>        
36259>>>>>>>        //  Extract parts
36259>>>>>>>        Move (Mid(sTimeString, 2, 1)) to sHours
36260>>>>>>>        Move (Mid(sTimeString, 2, 4)) to sMinutes
36261>>>>>>>        Move (Mid(sTimeString, 2, 7)) to sSeconds
36262>>>>>>>        
36262>>>>>>>        //  Set to DateTime
36262>>>>>>>        Move (DateSetHour(dtTime, (Integer(sHours)))) to dtTime
36263>>>>>>>        Move (DateSetMinute(dtTime, (Integer(sMinutes)))) to dtTime
36264>>>>>>>        Move (DateSetSecond(dtTime, (Integer(sSeconds)))) to dtTime
36265>>>>>>>        
36265>>>>>>>        Function_Return dtTime
36266>>>>>>>    End_Function
36267>>>>>>>End_Class
36268>>>>>Use cWebAppUserDataDictionary.dd
Including file: cWebAppUserDataDictionary.dd    (D:\DataFlex 24.0\Pkg\cWebAppUserDataDictionary.dd)
36268>>>>>>>Use DataDict.pkg
36268>>>>>>>Open WebAppUser
36270>>>>>>>Open WebAppSession
36272>>>>>>>
36272>>>>>>>Class cWebAppUserDataDictionary is a DataDictionary
36273>>>>>>>    
36273>>>>>>>    Procedure Construct_Object
36275>>>>>>>        Forward Send Construct_Object
36277>>>>>>>        Set Main_File to WebAppUser.File_Number
36278>>>>>>>
36278>>>>>>>        Set Add_Client_File to WebAppSession.File_Number
36279>>>>>>>
36279>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
36280>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
36281>>>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
36282>>>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
36283>>>>>>>    End_Procedure
36284>>>>>>>
36284>>>>>>>End_Class
36285>>>>>
36285>>>>>Class cWebSessionManagerStandard is a cWebSessionManager
36286>>>>>    
36286>>>>>    Procedure Construct_Object
36288>>>>>        Handle hoUserDD hoSessionDD
36288>>>>>        
36288>>>>>        Forward Send Construct_Object
36290>>>>>        
36290>>>>>        Property Handle phoUserDD 0      // Handle to the WebAppUser DDO
36291>>>>>        Property Handle phoSessionDD 0   // Handle to the WebAppSession DDO        
36292>>>>>        
36292>>>>>        Get Create (RefClass(cWebAppUserDataDictionary)) to hoUserDD
36293>>>>>        Get Create (RefClass(cWebAppSessionDataDictionary)) to hoSessionDD
36294>>>>>        Set DDO_Server of hoSessionDD to hoUserDD
36295>>>>>
36295>>>>>        Set phoUserDD to hoUserDD
36296>>>>>        Set phoSessionDD to hoSessionDD
36297>>>>>        Property Boolean pbCreatingNewSession False
36298>>>>>        Property String psLoginName
36299>>>>>        Property String psUserName ""
36300>>>>>        Property Integer piUserRights 0
36301>>>>>    End_Procedure
36302>>>>>    
36302>>>>>    Function CreateSession String sRemoteAddress Returns String
36304>>>>>        String sSessionKey
36304>>>>>        Integer iErr
36304>>>>>        Boolean bLogWebSession
36304>>>>>        Handle hoSessionDD       
36304>>>>>        Get phoSessionDD to hoSessionDD
36305>>>>>        
36305>>>>>        //  Get session key
36305>>>>>        Forward Get CreateSession sRemoteAddress to sSessionKey
36307>>>>>        
36307>>>>>        Get pbLogWebSession to bLogWebSession
36308>>>>>        If not bLogWebSession Begin
36310>>>>>            Function_Return sSessionKey        
36311>>>>>        End
36311>>>>>>
36311>>>>>
36311>>>>>        //  Store session
36311>>>>>        Send Clear of hoSessionDD
36312>>>>>        Set Field_Changed_Value of hoSessionDD Field WebAppSession.SessionKey to sSessionKey
36313>>>>>        Set Field_Changed_Value of hoSessionDD Field WebAppSession.RemoteAddress to sRemoteAddress
36314>>>>>        Set Field_Changed_Value of hoSessionDD Field WebAppSession.Active to "Y"
36315>>>>>        Get Request_Validate of hoSessionDD to iErr
36316>>>>>        If (iErr) Begin
36318>>>>>            // this should not happen. If it does its a programming error
36318>>>>>            Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
36319>>>>>>
36319>>>>>            Function_Return ""
36320>>>>>        End
36320>>>>>>
36320>>>>>        Send Request_Save of hoSessionDD
36321>>>>>        If (Err) Begin
36323>>>>>            // this shouldn't happen, if it does likely a duplicate session key issue, even through request_save already gave an error we give another one to make tracking down easier
36323>>>>>            Error DFERR_PROGRAM C_$WebAppSesionSaveFailed
36324>>>>>>
36324>>>>>            Function_Return ""
36325>>>>>        End
36325>>>>>>
36325>>>>>       
36325>>>>>        Function_Return sSessionKey        
36326>>>>>    End_Function
36327>>>>>    
36327>>>>>    
36327>>>>>    Function ValidateSession String sSessionKey Boolean bOptLoadWebApp Returns Boolean
36329>>>>>        DateTime dtLastAccess dtCurrent
36329>>>>>        TimeSpan tsDiff
36329>>>>>        Integer iErr iSessionTimeout iSpanMinutes
36329>>>>>        Boolean bResult bCreatingNewSession
36329>>>>>        Boolean bLogWebSession bLoadWebApp
36329>>>>>        Integer eLoginMode
36329>>>>>        String sTime
36329>>>>>        Handle hoSessionDD hoUserDD       
36329>>>>>        
36329>>>>>        Move False to bLoadWebApp
36330>>>>>        If (num_arguments >= 2) Begin
36332>>>>>            Move bOptLoadWebApp to bLoadWebApp
36333>>>>>        End
36333>>>>>>
36333>>>>>        
36333>>>>>        Get phoSessionDD to hoSessionDD
36334>>>>>        Get phoUserDD to hoUserDD
36335>>>>>        
36335>>>>>        Get pbLogWebSession to bLogWebSession
36336>>>>>        Get peLoginMode to eLoginMode
36337>>>>>        
36337>>>>>        // for this object, you can only disable logging if login completely is disabled
36337>>>>>        If (not(bLogWebSession) and (eLoginMode<>lmLoginNone)) Begin
36339>>>>>            Error DFERR_PROGRAM C_$WebSessionLoggingMustBeEnabled
36340>>>>>>
36340>>>>>            Function_Return False
36341>>>>>        End
36341>>>>>>
36341>>>>>
36341>>>>>        //  Clear session properties
36341>>>>>        Set psSessionKey to ""
36342>>>>>        Send UpdateSessionProperties True
36343>>>>>        
36343>>>>>        If not bLogWebSession Begin
36345>>>>>            Forward Get ValidateSession sSessionKey to bResult
36347>>>>>            Function_Return bResult
36348>>>>>        End        
36348>>>>>>
36348>>>>>        
36348>>>>>        Move False to bResult
36349>>>>>        Get piSessionTimeout to iSessionTimeout 
36350>>>>>        
36350>>>>>        //  Check if session exists
36350>>>>>        Send Clear of hoSessionDD
36351>>>>>        Move sSessionKey to WebAppSession.SessionKey
36352>>>>>        Send Find of hoSessionDD EQ Index.1
36353>>>>>            
36353>>>>>        If (Found) Begin
36355>>>>>            //  Calculate timespan between now and last access time
36355>>>>>            Move (CurrentDateTime()) to dtCurrent
36356>>>>>            Move WebAppSession.LastAccessDate to dtLastAccess
36357>>>>>            Get StringToTime of hoSessionDD dtLastAccess WebAppSession.LastAccessTime to dtLastAccess
36358>>>>>            Move (dtCurrent - dtLastAccess) to tsDiff
36359>>>>>            Move (SpanTotalMinutes(tsDiff)) to iSpanMinutes
36360>>>>>            
36360>>>>>            //  Check if session didn't time out
36360>>>>>            If (IsDateValid(dtLastAccess) and (iSessionTimeout <= 0 or (iSpanMinutes < iSessionTimeout)) and WebAppSession.Active = "Y") Begin
36362>>>>>                Forward Get ValidateSession sSessionKey to bResult
36364>>>>>                   
36364>>>>>                If (bResult) Begin
36366>>>>>                    //  Update session record
36366>>>>>                    Get TimeToString of hoSessionDD dtCurrent to sTime 
36367>>>>>                    Set Field_Changed_Value of hoSessionDD Field WebAppSession.LastAccessDate to dtCurrent
36368>>>>>                    Set Field_Changed_Value of hoSessionDD Field WebAppSession.LastAccessTime to sTime
36369>>>>>                    Set Field_Changed_Value of hoSessionDD Field WebAppSession.UseCount to (WebAppSession.UseCount + 1)
36370>>>>>                    Get Request_Validate of hoSessionDD to iErr
36371>>>>>                    If (iErr) Begin
36373>>>>>                        // this should not happen. If it does its a programming error
36373>>>>>                        Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
36374>>>>>>
36374>>>>>                        Function_Return False
36375>>>>>                    End
36375>>>>>>
36375>>>>>                    Send Request_Save of hoSessionDD
36376>>>>>                    
36376>>>>>                    //  Update user properties
36376>>>>>                    Send UpdateSessionProperties False
36377>>>>>                End
36377>>>>>>
36377>>>>>            End
36377>>>>>>
36377>>>>>            Else Begin
36378>>>>>                // Test the Creating New Session Flag to protect against infinite recursion....
36378>>>>>                Get pbCreatingNewSession to bCreatingNewSession
36379>>>>>                
36379>>>>>                If (not(bCreatingNewSession)) Begin
36381>>>>>                    If (not(bLoadWebApp)) Begin
36383>>>>>                        Move False to bResult   //  We can only continue immediately if we were loading the webapp, other operations are not allowed!
36384>>>>>                        Error DFERR_WEBAPP_SESSION_TIMEOUT "Your application session has timed out or is inactive, please login again."
36385>>>>>>
36385>>>>>                        Send NavigateRefresh of ghoWebApp          // refresh the WebApp at the client (triggers a login)
36386>>>>>                    End
36386>>>>>>
36386>>>>>                    Else Begin
36387>>>>>                        Set pbCreatingNewSession to True                    
36388>>>>>                        Get RecreateSession of ghoWebApp to bResult 
36389>>>>>                        Set pbCreatingNewSession to False                        
36390>>>>>                    End
36390>>>>>>
36390>>>>>                End
36390>>>>>>
36390>>>>>            End
36390>>>>>>
36390>>>>>        End
36390>>>>>>
36390>>>>>        Else Begin
36391>>>>>            Error DFERR_WEBAPP_BAD_SESSION_KEY "Session key not known (reload page to recreate session)"
36392>>>>>>
36392>>>>>        End
36392>>>>>>
36392>>>>>        
36392>>>>>        Function_Return bResult
36393>>>>>    End_Function
36394>>>>>    
36394>>>>>    Function UserLogin String sLoginName String sPassword Returns Boolean
36396>>>>>        String sSessionKey sUserPassword
36396>>>>>        Handle hoSessionDD hoUserDD
36396>>>>>        Boolean bMatch  
36396>>>>>        
36396>>>>>        Get phoSessionDD to hoSessionDD
36397>>>>>        Get phoUserDD to hoUserDD
36398>>>>>        Integer iErr eLoginMode
36398>>>>>        
36398>>>>>        // Refind session record
36398>>>>>        Get psSessionKey to sSessionKey
36399>>>>>        Send Clear of hoSessionDD
36400>>>>>        Move sSessionKey to WebAppSession.SessionKey
36401>>>>>        Send Find of hoSessionDD EQ Index.1
36402>>>>>        
36402>>>>>        If (Found and WebAppSession.SessionKey = sSessionKey) Begin
36404>>>>>            Get peLoginMode to eLoginMode
36405>>>>>            
36405>>>>>            //  Find the user
36405>>>>>            Move sLoginName to WebAppUser.LoginName
36406>>>>>            Send Find of hoUserDD EQ Index.1
36407>>>>>            
36407>>>>>            // Check username and password
36407>>>>>            If (Found and (Lowercase(sLoginName) = Lowercase(Trim(WebAppUser.LoginName)))) Begin
36409>>>>>                Get Field_Current_Value of hoUserDD Field WebAppUser.Password to sUserPassword
36410>>>>>                Get ComparePasswords (Trim(sUserPassword)) (Trim(sPassword)) to bMatch
36411>>>>>                
36411>>>>>                If (bMatch) Begin
36413>>>>>                    // Store the login
36413>>>>>                    Set Field_Changed_Value of hoUserDD Field WebAppUser.LastLogin to (CurrentDateTime())
36414>>>>>                    Get Request_Validate of hoSessionDD to iErr
36415>>>>>                    If (iErr) Begin
36417>>>>>                        // this should not happen. If it does its a programming error
36417>>>>>                        Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
36418>>>>>>
36418>>>>>                        Function_Return False
36419>>>>>                    End
36419>>>>>>
36419>>>>>                    
36419>>>>>                    Send Request_Save of hoSessionDD
36420>>>>>                    
36420>>>>>                    // Update session properties
36420>>>>>                    Send UpdateSessionProperties False
36421>>>>>                    Send NotifyChangeRights
36422>>>>>                    Function_Return True
36423>>>>>                End
36423>>>>>>
36423>>>>>                Else Begin
36424>>>>>                    //  We should rely directly on this buffer elsewhere but just be sure
36424>>>>>                    Send Clear of hoUserDD
36425>>>>>                End
36425>>>>>>
36425>>>>>            End
36425>>>>>>
36425>>>>>        End
36425>>>>>>
36425>>>>>          
36425>>>>>        Function_Return False
36426>>>>>    End_Function
36427>>>>>    
36427>>>>>    Function IsLoggedIn Returns Boolean
36429>>>>>        String sLoginName
36429>>>>>        Boolean bLogWebSession bLoggedIn
36429>>>>>        
36429>>>>>        Get pbLogWebSession to bLogWebSession
36430>>>>>        If not bLogWebSession Begin
36432>>>>>            Forward Get IsLoggedIn to bLoggedIn
36434>>>>>            Function_Return bLoggedIn
36435>>>>>        End
36435>>>>>>
36435>>>>>        
36435>>>>>        Get psLoginName to sLoginName
36436>>>>>        
36436>>>>>        Function_Return (sLoginName <> "")
36437>>>>>    End_Function
36438>>>>>    
36438>>>>>    
36438>>>>>    //
36438>>>>>    // This procedure is called when validating a session and after logging in. Its purpose is to 
36438>>>>>    // update properties based on the session and user data. Augment this function to update 
36438>>>>>    // properties based on the session / user table. Note that WebAppUser and WebAppSession contain
36438>>>>>    // the right records when this procedure is called.
36438>>>>>    //
36438>>>>>    // Params:
36438>>>>>    //      bClear   True if the procedure is called before session validation to clear properties.
36438>>>>>    //
36438>>>>>    Procedure UpdateSessionProperties Boolean bClear
36440>>>>>        Handle hoUserDD
36440>>>>>        
36440>>>>>        Get phoUserDD to hoUserDD
36441>>>>>        
36441>>>>>        //  Update user properties
36441>>>>>        If (not(bClear) and HasRecord(hoUserDD)) Begin
36443>>>>>            Set psUsername to (Trim(WebAppUser.FullName))
36444>>>>>            Set psLoginName to (Trim(WebAppUser.LoginName))
36445>>>>>            Set piUserRights to WebAppUser.Rights
36446>>>>>            
36446>>>>>            Send OnSessionPropertiesSet 
36447>>>>>        End
36447>>>>>>
36447>>>>>        Else Begin
36448>>>>>            Set psUsername to ""
36449>>>>>            Set psLoginName to ""
36450>>>>>            Set piUserRights to 0
36451>>>>>            
36451>>>>>            Send OnSessionPropertiesClear
36452>>>>>        End
36452>>>>>>
36452>>>>>    End_Procedure
36453>>>>>    
36453>>>>>    //
36453>>>>>    // This function is called to perform the password comparison. It gets the entered password and
36453>>>>>    // the password value of the user table as parameters. The WebAppUser buffer will contain the
36453>>>>>    // right record. This function can be augmented to implement security features like storing the
36453>>>>>    // password as a hashed value.
36453>>>>>    //
36453>>>>>    // Params:
36453>>>>>    //      sUserPassword       Value of the WebAppUser.Password field.
36453>>>>>    //      sEnteredPassword    Value entered on the login screen during login.
36453>>>>>    //
36453>>>>>    Function ComparePasswords String sUserPassword String sEnteredPassword Returns Boolean
36455>>>>>        Function_Return (sUserPassword = sEnteredPassword)
36456>>>>>    End_Function
36457>>>>>    
36457>>>>>    Procedure OnSessionPropertiesSet
36459>>>>>        //  Empty event stub
36459>>>>>    End_Procedure
36460>>>>>    
36460>>>>>    Procedure OnSessionPropertiesClear
36462>>>>>        //  Empty event stub
36462>>>>>    End_Procedure
36463>>>>>    
36463>>>>>    Procedure EndSession
36465>>>>>        Integer iErr
36465>>>>>        Boolean bLogWebSession
36465>>>>>        Handle hoSessionDD       
36465>>>>>        
36465>>>>>        Get phoSessionDD to hoSessionDD
36466>>>>>        Get pbLogWebSession to bLogWebSession
36467>>>>>        If not bLogWebSession Begin
36469>>>>>            Forward Send EndSession
36471>>>>>            Procedure_Return
36472>>>>>        End
36472>>>>>>
36472>>>>>            
36472>>>>>        //  Check if session exists
36472>>>>>        Send Clear of hoSessionDD
36473>>>>>        Get psSessionKey to WebAppSession.SessionKey
36474>>>>>        
36474>>>>>        Send Find of hoSessionDD EQ Index.1
36475>>>>>        If (Found) Begin
36477>>>>>            Set Field_Changed_Value of hoSessionDD Field WebAppSession.Active to "N"
36478>>>>>            Get Request_Validate of hoSessionDD to iErr
36479>>>>>            If (iErr) Begin
36481>>>>>                // this should not happen. If it does its a programming error
36481>>>>>                Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
36482>>>>>>
36482>>>>>                Procedure_Return
36483>>>>>            End
36483>>>>>>
36483>>>>>            Send Request_Save of hoSessionDD
36484>>>>>        End
36484>>>>>>
36484>>>>>    End_Procedure
36485>>>>>
36485>>>>>End_Class
36486>>>>>
36486>>>
36486>>>Object oSessionManager is a cWebSessionManagerStandard
36488>>>End_Object
36489>>>
36489>>>
36489>    Use Login.wo
Including file: Login.wo    (D:\DataFlex Projects\Quickstart\AppSrc\Login.wo)
36489>>>Use cWebView.pkg
36489>>>Use cWebForm.pkg
36489>>>Use cWebButton.pkg
36489>>>Use cWebPanel.pkg
36489>>>Use cWebLabel.pkg
36489>>>Use cWebSpacer.pkg
36489>>>Use cWebImage.pkg
36489>>>
36489>>>Object oLogin is a cWebView
36491>>>    Set piMinWidth to 250
36492>>>    Set piMaxWidth to 420
36493>>>    Set pbLoginModeEnforced to False
36494>>>    Set piColumnCount to 12
36495>>>    Set psCSSClass to "LoginView"
36496>>>    Set pbServerOnSubmit to True
36497>>>    
36497>>>    Set psStateViewName to "Login"
36498>>>    Set pbStateReplace to True  // Always replace the state so the login never becomes its own history item
36499>>>    
36499>>>    Property String psPrevStateHash ""  // Remember the state hash that the user navigated too so we can redirect after login
36502>>>    
36502>>>    Delegate Set phoLoginView to Self
36504>>>    
36504>>>    Object oTopSpacer is a cWebSpacer
36506>>>        Set pbFillHeight to True
36507>>>        Set piColumnSpan to 12
36508>>>    End_Object
36509>>>    
36509>>>    Object oWarning is a cWebLabel
36511>>>        Set pbVisible to False
36512>>>        Set psCaption to "Invalid User ID or password. \n\rHint: 'Guest' & 'guest'."
36513>>>        Set peAlign to alignCenter
36514>>>        Set piColumnSpan to 12
36515>>>        Set psCSSClass to "LoginWarning"
36516>>>    End_Object
36517>>>    
36517>>>    Object oLogo is a cWebImage
36519>>>        Set piColumnSpan to 10
36520>>>        Set psUrl to "images/DF_Logo_Retina.png"
36521>>>        Set pePosition to wiFit
36522>>>        Set piColumnIndex to 1
36523>>>        Set piHeight to 160
36524>>>        
36524>>>        WebSetResponsive piHeight rmMobile to 100  // Best for small smart phones
36525>>>    End_Object
36526>>>    
36526>>>    Object oLoginName is a cWebForm
36528>>>        Set psLabel to "User ID:"
36529>>>        Set peLabelPosition to lpTop
36530>>>        Set piMaxLength to 20
36531>>>        Set piColumnIndex to 1
36532>>>        Set pbShowLabel to False
36533>>>        Set psPlaceHolder to "loginname"
36534>>>        Set piColumnSpan to 10
36535>>>        Set psAutoComplete to "username"
36536>>>    End_Object
36537>>>    
36537>>>    Object oPassword is a cWebForm
36539>>>        Set psLabel to "Password:"
36540>>>        Set pbPassword to True
36541>>>        Set peLabelAlign to alignLeft
36542>>>        Set piMaxLength to 20
36543>>>        Set peLabelPosition to lpTop
36544>>>        Set pbShowLabel to False
36545>>>        Set psPlaceHolder to "password"
36546>>>        Set piColumnSpan to 10
36547>>>        Set piColumnIndex to 1
36548>>>        Set psAutoComplete to "current-password"
36549>>>    End_Object
36550>>>    
36550>>>    Object oWebSpacer1 is a cWebSpacer
36552>>>        Set piColumnSpan to 12
36553>>>        Set piHeight to 10
36554>>>    End_Object
36555>>>    
36555>>>    Object oLoginButton is a cWebButton
36557>>>        Set pbShowLabel to False
36558>>>        Set psCaption to "sign in"
36559>>>        Set pbServerOnClick to True
36560>>>        Set piColumnSpan to 10
36561>>>        Set piColumnIndex to 1
36562>>>        
36562>>>        Procedure OnClick
36565>>>            Send DoLogin
36566>>>        End_Procedure
36567>>>    End_Object
36568>>>    
36568>>>    Object oBottomSpacer is a cWebSpacer
36570>>>        Set pbFillHeight to True
36571>>>        Set piColumnSpan to 12
36572>>>    End_Object
36573>>>    
36573>>>    Procedure DoLogin
36576>>>        String sLoginName sPassword sPrevStateHash
36576>>>        Boolean bResult
36576>>>        
36576>>>        WebGet psValue of oLoginName to sLoginName
36577>>>        WebGet psValue of oPassword to sPassword
36578>>>        
36578>>>        Get UserLogin of ghoWebSessionManager sLoginName sPassword to bResult
36579>>>        
36579>>>        If (bResult) Begin
36581>>>            Send Hide of oLogin
36582>>>            Send ShowHeader of ghoWebApp
36583>>>            WebSet psCSSClass of ghoWebApp to ""
36584>>>            
36584>>>            WebGet psPrevStateHash to sPrevStateHash
36585>>>            Send NavigateToStateHash of ghoWebApp sPrevStateHash True
36586>>>            
36586>>>            // clear the login values. we don't want to return the login id & password as synchronized properties....
36586>>>            WebSet psValue of oLoginName to ""
36587>>>            WebSet psValue of oPassword  to ""
36588>>>            WebSet pbVisible of oWarning to False
36589>>>        End
36589>>>>
36589>>>        Else Begin
36590>>>            WebSet pbVisible of oWarning to True
36591>>>        End
36591>>>>
36591>>>    End_Procedure
36592>>>    
36592>>>    Procedure OnSubmit
36595>>>        Send DoLogin
36596>>>    End_Procedure
36597>>>    
36597>>>    Procedure OnLoad
36600>>>        String sPrevStateHash sView
36600>>>        
36600>>>        Forward Send OnLoad
36602>>>        
36602>>>        //  Store the current state so we can go back to that later (only if it points to a different view)
36602>>>        Get StateHash of ghoWebApp to sPrevStateHash
36603>>>        Send ParseViewStateHash sPrevStateHash (&sView)
36604>>>        If (Lowercase(sView) <> Lowercase(psStateViewName(Self))) Begin
36606>>>            WebSet psPrevStateHash to sPrevStateHash
36607>>>        End
36607>>>>
36607>>>        
36607>>>    End_Procedure
36608>>>    
36608>>>    Procedure OnBeforeShow
36611>>>        //  Hide header & apply nice background style
36611>>>        Send HideHeader to ghoWebApp
36612>>>        WebSet psCSSClass of ghoWebApp to "LoginBackground"
36613>>>    End_Procedure
36614>>>    
36614>>>End_Object
36615>>>
36615>>>
36615>>>
36615>>>
36615>    Use WebResourceManager.wo
Including file: WebResourceManager.wo    (D:\DataFlex Projects\Quickstart\AppSrc\WebResourceManager.wo)
36615>>>Use cWebResourceManager.pkg
36615>>>
36615>>>Object oWebResourceManager is a cWebResourceManager
36617>>>End_Object
36618>    
36618>    Use Dashboard.wo
Including file: Dashboard.wo    (D:\DataFlex Projects\Quickstart\AppSrc\Dashboard.wo)
36618>>>Use cWebView.pkg
36618>>>Use cWebPanel.pkg
36618>>>Use cWebForm.pkg
36618>>>Use cWebButton.pkg
36618>>>Use cWebGroup.pkg
36618>>>Use cWebSpacer.pkg
36618>>>Use cWebHtmlBox.pkg
36618>>>Use cWebMenuGroup.pkg
36618>>>Use cWebMenuItem.pkg
36618>>>Use cWebLabel.pkg
36618>>>Use cWebList.pkg
36618>>>Use cWebColumn.pkg
36618>>>
36618>>>Object oDashboard is a cWebView
36620>>>
36620>>>    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
36620>>>    // Add a DDO Structure 
36620>>>    //
36620>>>    // There is no need to synchronize a DD structure on the client so we do
36620>>>    // not set the Server property or send ADDOStructure. We will simply use
36620>>>    // DDO's to mine data and generate HTML for our cWebHTMLBox objects.
36620>>>    // It is the HTML in these objects that is sent to the client each time 
36620>>>    // this page is shown.
36620>>>    //
36620>>>    // Also, it is important for the drill-down Navigation interface that we
36620>>>    // do not set the Server property to some DDO because this will affect 
36620>>>    // constraints in the next view that we navigate to.
36620>>>    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
36620>>>
36620>>>    Set piMaxWidth to 1024
36621>>>    
36621>>>    Set psCaption to "Dashboard"
36622>>>    Set peViewType to vtUndefined
36623>>>    Set pbShowCaption to False
36624>>>    Set psCSSClass to "Dashboard"
36625>>>    
36625>>>    Object oWebMainPanel is a cWebPanel
36627>>>        Set piColumnCount to 24
36628>>>        
36628>>>        // - - - - - - - - - - - - - - -
36628>>>        // Main Panel's Responsive Rules
36628>>>        // - - - - - - - - - - - - - - -
36628>>>        WebSetResponsive piColumnCount rmMobile to 1
36629>>>        WebSetResponsive piColumnCount rmTabletPortrait to 16
36630>>>    
36630>>>        Object oTiles_grp is a cWebGroup
36632>>>            Set piColumnSpan to 8
36633>>>            Set pbShowBorder to False
36634>>>            Set pbShowCaption to False
36635>>>            Set piColumnCount to 12
36636>>>            
36636>>>            Set psCSSClass to "TilesGroup"
36637>>>    
36637>>>            Object oWelcomeTile is a cWebHtmlBox
36639>>>                Set piColumnSpan to 6
36640>>>                Set psCSSClass to "Tile Light"
36641>>>                Set psHtml to '<div Class="WebCon_Sizer"><div class="Tile_Title">Welcome</div><div Class="Tile_Subtitle">--</div></div>'
36642>>>    
36642>>>                Procedure OnLoad
36645>>>                    Send UpdateHTML ('<div class="WebCon_Sizer">' + ;                                     '<div class="Tile_Title">Welcome</div>' +;                                     '<div class="Tile_Subtitle">' - htmlEncode(psUserName(ghoWebSessionManager)) - '</div>' +;                                     '</div>')
36646>>>                End_Procedure
36647>>>                
36647>>>            End_Object
36648>>>    
36648>>>            Object oTile2 is a cWebHtmlBox
36650>>>                Set pbServerOnClick to True
36651>>>                Set piColumnSpan to 6
36652>>>                Set piColumnIndex to 6
36653>>>                Set psCSSClass to "Tile LightAlternate"
36654>>>                Set psHtml to '<div class="WebCon_Sizer" data-ServerOnClick="openview"><div Class="Tile_Title">Tile 2</div><div class="Tile_Subtitle"></div></div>'
36655>>>                                
36655>>>                // WebRegisterPath ntNavigateForwardCustom oYourViewName
36655>>>                
36655>>>                Procedure OnClick String sId String sParam
36658>>>                    Send NavigatePath
36659>>>                End_Procedure
36660>>>                
36660>>>            End_Object
36661>>>    
36661>>>            Object oTile3 is a cWebHtmlBox
36663>>>                Set pbServerOnClick to True
36664>>>                Set piColumnSpan to 6
36665>>>                Set psCSSClass to "Tile Dark"
36666>>>                Set psHtml to '<div class="WebCon_Sizer" data-ServerOnClick="openview"><div Class="Tile_Title">Tile 3</div><div class="Tile_Subtitle"></div></div>'
36667>>>    
36667>>>                // WebRegisterPath ntNavigateForwardCustom oYourViewName
36667>>>                
36667>>>                Procedure OnClick String sId String sParam
36670>>>                    Send NavigatePath
36671>>>                End_Procedure
36672>>>                
36672>>>            End_Object
36673>>>    
36673>>>            Object oTile4 is a cWebHtmlBox
36675>>>                Set pbServerOnClick to True
36676>>>                Set piColumnSpan to 6
36677>>>                Set piColumnIndex to 6
36678>>>                Set psCSSClass to "Tile DarkAlternate"
36679>>>                Set psHtml to '<div class="WebCon_Sizer" data-ServerOnClick="openview"><div Class="Tile_Title">Tile 4</div><div class="Tile_Subtitle"></div></div>'
36680>>>            
36680>>>                // WebRegisterPath ntNavigateForwardCustom oYourViewName
36680>>>                
36680>>>                Procedure OnClick String sId String sParam
36683>>>                    Send NavigatePath
36684>>>                End_Procedure
36685>>>                
36685>>>            End_Object
36686>>>        End_Object
36687>>>    
36687>>>    End_Object
36688>>>    
36688>>>    Procedure OnBeforeShow
36691>>>        // Each time this view is shown we will update the appropriate information.
36691>>>    End_Procedure
36692>>>
36692>>>End_Object
36693>    Use ZoomPerson.wo
Including file: ZoomPerson.wo    (D:\DataFlex Projects\Quickstart\AppSrc\ZoomPerson.wo)
36693>>>// D:\DataFlex Projects\Quickstart\AppSrc\ZoomPerson.wo
36693>>>// ZoomPerson
36693>>>//
36693>>>
36693>>>Use cWebView.pkg
36693>>>Use cWebPanel.pkg
36693>>>Use cWebMenuGroup.pkg
36693>>>Use cWebMenuItem.pkg
36693>>>Use cWebForm.pkg
36693>>>Use cWebTabContainer.pkg
36693>>>Use cWebTabPage.pkg
36693>>>Use cWebEdit.pkg
36693>>>
36693>>>Use cPersonDataDictionary.dd
Including file: cPersonDataDictionary.dd    (D:\DataFlex Projects\Quickstart\DDSrc\cPersonDataDictionary.dd)
36693>>>>>Use DataDict.pkg
36693>>>>>
36693>>>>>Open Person
Including file: Person.fd    (D:\DataFlex Projects\Quickstart\DDSrc\Person.fd)
36695>>>>>
36695>>>>>Class cPersonDataDictionary is a DataDictionary
36696>>>>>    
36696>>>>>    Procedure Construct_Object
36698>>>>>        Forward Send Construct_Object
36700>>>>>        Set Main_File to Person.File_Number
36701>>>>>
36701>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
36702>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
36703>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
36704>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
36705>>>>>
36705>>>>>        Set Key_Field_State Field Person.PersonId to True
36706>>>>>
36706>>>>>        Set Field_Label_Short Field Person.LastName to "Last name"
36707>>>>>        Set Field_Option Field Person.LastName DD_REQUIRED to True
36708>>>>>
36708>>>>>        Set Field_Label_Short Field Person.FirstName to "First name"
36709>>>>>        Set Field_Option Field Person.FirstName DD_REQUIRED to True
36710>>>>>
36710>>>>>    End_Procedure
36711>>>>>
36711>>>>>End_Class
36712>>>
36712>>>Object oZoomPerson is a cWebView
36714>>>    Set piColumnCount to 12
36715>>>    Set psCaption to "Person Info"
36716>>>    Set peWebViewStyle to wvsDrilldown
36717>>>    Set peViewType to vtZoom
36718>>>    Set pbShowCaption to False
36719>>>    Set Verify_Save_Msg to 0
36720>>>    Set piMaxWidth to 1024
36721>>>
36721>>>    Object oPerson_DD is a cPersonDataDictionary
36723>>>    End_Object 
36724>>>
36724>>>    Set Main_DD To oPerson_DD
36725>>>    Set Server  To oPerson_DD
36726>>>
36726>>>
36726>>>    Object oWebMainPanel is a cWebPanel
36728>>>        Set piColumnCount to 12
36729>>>
36729>>>        Object oPersonFirstName is a cWebForm
36731>>>            Entry_Item Person.FirstName
36732>>>            Set piColumnSpan to 6
36733>>>            Set piColumnIndex to 0
36734>>>            Set peLabelPosition to lpTop
36735>>>            Set psLabel to "First name"
36736>>>        End_Object 
36737>>>        WebSetResponsive piColumnCount rmMobile to 4
36738>>>
36738>>>        Object oPersonLastName is a cWebForm
36740>>>            Entry_Item Person.LastName
36741>>>            Set piColumnSpan to 6
36742>>>            Set piColumnIndex to 6
36743>>>            Set peLabelPosition to lpTop
36744>>>            Set psLabel to "Last name"
36745>>>        End_Object 
36746>>>
36746>>>        Object oWebTabContainer is a cWebTabContainer
36748>>>            Set pbFillHeight to True
36749>>>            Set piColumnSpan to 12
36750>>>            Set pbShowLabel to False
36751>>>
36751>>>            Object oPage1 is a cWebTabPage
36753>>>                Set piColumnCount to 12
36754>>>                Set psCaption to "Contact"
36755>>>                WebSetResponsive piColumnCount rmMobile to 4
36756>>>
36756>>>                Object oPersonAddress is a cWebForm
36758>>>                    Entry_Item Person.Address
36759>>>                    Set piColumnSpan to 12
36760>>>                    Set piColumnIndex to 0
36761>>>                    Set peLabelPosition to lpTop
36762>>>                    Set psLabel to "Address"
36763>>>                End_Object 
36764>>>
36764>>>                Object oPersonZip is a cWebForm
36766>>>                    Entry_Item Person.Zip
36767>>>                    Set piColumnSpan to 7
36768>>>                    Set piColumnIndex to 0
36769>>>                    Set peLabelPosition to lpTop
36770>>>                    Set psLabel to "Zip"
36771>>>                End_Object 
36772>>>
36772>>>                Object oPersonCity is a cWebForm
36774>>>                    Entry_Item Person.City
36775>>>                    Set piColumnSpan to 11
36776>>>                    Set piColumnIndex to 0
36777>>>                    Set peLabelPosition to lpTop
36778>>>                    Set psLabel to "City"
36779>>>                End_Object 
36780>>>
36780>>>                Object oPersonPhone is a cWebForm
36782>>>                    Entry_Item Person.Phone
36783>>>                    Set piColumnSpan to 5
36784>>>                    Set piColumnIndex to 0
36785>>>                    Set peLabelPosition to lpTop
36786>>>                    Set psLabel to "Phone"
36787>>>                End_Object 
36788>>>            End_Object 
36789>>>
36789>>>            Object oPage2 is a cWebTabPage
36791>>>                Set piColumnCount to 12
36792>>>                Set psCaption to "Comments"
36793>>>                WebSetResponsive piColumnCount rmMobile to 4
36794>>>
36794>>>                Object oPersonComments is a cWebEdit
36796>>>                    Entry_Item Person.Comments
36797>>>                    Set piColumnSpan to 0
36798>>>                    Set piColumnIndex to 0
36799>>>                    Set peLabelPosition to lpTop
36800>>>                    Set psLabel to "Comments"
36801>>>                    Set piMinHeight to 150
36802>>>                    Set pbFillHeight to True
36803>>>                End_Object 
36804>>>            End_Object 
36805>>>        End_Object 
36806>>>    End_Object 
36807>>>
36807>>>    Object oActionGroup is a cWebMenuGroup
36809>>>
36809>>>        Object oSaveBtn is a cWebMenuItem
36811>>>            Set psCSSClass to "WebSaveMenuItem"
36812>>>            Set psCaption to "Save"
36813>>>
36813>>>            Procedure OnClick
36816>>>                Send Request_Save
36817>>>            End_Procedure
36818>>>
36818>>>        End_Object 
36819>>>
36819>>>        Object oEditBtn is a cWebMenuItem
36821>>>            Set psCSSClass to "WebEditMenuItem"
36822>>>            Set psCaption to "Edit"
36823>>>            Procedure OnClick
36826>>>                Send ChangeEditMode True
36827>>>                Send SetActionButtons
36828>>>            End_Procedure
36829>>>
36829>>>        End_Object 
36830>>>
36830>>>        Object oDeleteBtn is a cWebMenuItem
36832>>>            Set psCSSClass to "WebDeleteMenuItem"
36833>>>            Set psCaption to "Delete"
36834>>>            Set peActionDisplay to adMenu
36835>>>
36835>>>            Procedure OnClick
36838>>>                Send Request_Delete
36839>>>            End_Procedure
36840>>>
36840>>>        End_Object 
36841>>>
36841>>>        Object oCancelChangesBtn is a cWebMenuItem
36843>>>            Set psCSSClass to "WebIcon_Refresh"
36844>>>            Set psCaption to "Clear Changes"
36845>>>            Set peActionDisplay to adMenu
36846>>>            Procedure OnClick
36849>>>                Send RefreshRecord
36850>>>            End_Procedure
36851>>>
36851>>>        End_Object 
36852>>>    End_Object 
36853>>>
36853>>>    Procedure SetActionButtons
36856>>>        tWebNavigateData NavigateData
36856>>>        tWebNavigateData NavigateData
36856>>>        Boolean bHasRecord
36856>>>        Handle hoDD
36856>>>
36856>>>        Get Server to hoDD
36857>>>        Get GetNavigateData to NavigateData
36858>>>        Get HasRecord of hoDD to bHasRecord
36859>>>
36859>>>        // let's hide all buttons and then Show the ones we want
36859>>>        WebSet pbRender of oEditBtn to False
36860>>>        WebSet pbRender of oSaveBtn to False
36861>>>        WebSet pbRender of oCancelChangesBtn to False
36862>>>        WebSet pbRender of oDeleteBtn to False
36863>>>
36863>>>        If (NavigateData.bReadOnly) Begin
36865>>>            WebSet pbRender of oEditBtn to True
36866>>>        End
36866>>>>
36866>>>        Else Begin
36867>>>            WebSet pbRender of oSaveBtn to True
36868>>>            WebSet pbRender of oCancelChangesBtn to True
36869>>>            WebSet pbRender of oDeleteBtn to bHasRecord
36870>>>        End
36870>>>>
36870>>>    End_Procedure
36871>>>
36871>>>    Procedure OnViewSaved Handle hoServer Boolean bChanged
36874>>>        // Close after save
36874>>>        Send NavigateClose Self
36875>>>    End_Procedure
36876>>>
36876>>>    // this will close the view after a delete
36876>>>    Procedure OnViewDeleted Handle hoDDO
36879>>>        Send NavigateClose Self
36880>>>    End_Procedure
36881>>>
36881>>>    Procedure OnNavigateForward tWebNavigateData NavigateData Integer hoInvokingView Integer hoInvokingObject
36884>>>        Case Begin
36884>>>            Case (NavigateData.eNavigateType = nfFromMain)
36886>>>                // If from main, this is a propbably a main file Select to Zoom.
36886>>>                Case Break
36887>>>
36887>>>            Case (NavigateData.eNavigateType = nfFromParent)
36890>>>                // If from parent, this is a constrained drill down.
36890>>>                Case Break
36891>>>
36891>>>            Case (NavigateData.eNavigateType = nfFromChild)
36894>>>                // If from child, this is a probably a parent Zoom from a Zoom.
36894>>>                Case Break
36895>>>
36895>>>            Case Else // must be nfUndefined
36895>>>
36895>>>        Case End
36895>>>
36895>>>        Send SetActionButtons
36896>>>
36896>>>    End_Procedure
36897>>>
36897>>>End_Object 
36898>    Use SelectPerson.wo
Including file: SelectPerson.wo    (D:\DataFlex Projects\Quickstart\AppSrc\SelectPerson.wo)
36898>>>// D:\DataFlex Projects\Quickstart\AppSrc\SelectPerson.wo
36898>>>// Person
36898>>>//
36898>>>
36898>>>Use cWebView.pkg
36898>>>Use cWebList.pkg
36898>>>Use cWebMenuGroup.pkg
36898>>>Use cWebMenuItem.pkg
36898>>>Use cWebColumnButton.pkg
36898>>>Use cWebColumn.pkg
36898>>>Use ZoomPerson.wo
36898>>>Use cPersonDataDictionary.dd
36898>>>
36898>>>Object oSelectPerson is a cWebView
36900>>>    Set psCaption to "Persons List"
36901>>>    Set peWebViewStyle to wvsDrilldown
36902>>>    Set peViewType to vtSelect
36903>>>    Set piColumnCount to 12
36904>>>    Set pbShowCaption to False
36905>>>    Set piMaxWidth to 1024
36906>>>
36906>>>    Object oPerson_DD is a cPersonDataDictionary
36908>>>    End_Object 
36909>>>
36909>>>    Set Main_DD to oPerson_DD
36910>>>    Set Server  to oPerson_DD
36911>>>
36911>>>
36911>>>    Object oList is a cWebList
36913>>>        Set piColumnSpan to 0
36914>>>        Set psCSSClass to "MobileList"
36915>>>        Set pbServerOnRowClick to True
36916>>>        Set pbFillHeight to True
36917>>>        Set pbShowHeader to False
36918>>>        Set piSortColumn to 0
36919>>>
36919>>>        Object oPersonLastName is a cWebColumn
36921>>>            Entry_Item Person.LastName
36922>>>            Set psCaption to "Person.LastName"
36923>>>            Set piWidth to 435
36924>>>            Set psCSSClass to "RowCaption"
36925>>>        End_Object 
36926>>>
36926>>>        Object oPersonFirstName is a cWebColumn
36928>>>            Entry_Item Person.FirstName
36929>>>            Set psCaption to "Person.FirstName"
36930>>>            Set piWidth to 435
36931>>>            Set psCSSClass to "RowCaption"
36932>>>        End_Object 
36933>>>
36933>>>        Object oDetailButton is a cWebColumnButton
36935>>>            Set psCaption to "btn"
36936>>>            Set piWidth to 45
36937>>>            Set pbFixedWidth to True
36938>>>            Set pbResizable to False
36939>>>            Set piListRowSpan to 2
36940>>>            Set psBtnCssClass to "WebButtonIcon WebIcon_Info"
36941>>>            Set peAlign to alignRight
36942>>>
36942>>>            WebRegisterPath ntNavigateForward oZoomPerson
36948>>>
36948>>>            Procedure OnClick
36951>>>                Send NavigatePath
36952>>>            End_Procedure
36953>>>
36953>>>            Procedure OnGetNavigateForwardData tWebNavigateData ByRef NavigateData Handle hoToView
36956>>>                Move True to NavigateData.bReadOnly
36957>>>            End_Procedure
36958>>>
36958>>>        End_Object 
36959>>>
36959>>>        Object oPersonCity is a cWebColumn
36961>>>            Entry_Item Person.City
36962>>>            Set psCaption to "Person.City"
36963>>>            Set piWidth to 652
36964>>>            Set piListColSpan to 2
36965>>>            Set pbNewLine to True
36966>>>            Set psCSSClass to "RowDetail"
36967>>>        End_Object 
36968>>>
36968>>>// ToDo: Fill in the from-parent child Select view object name for navigate forward
36968>>>//        WebRegisterPath ntNavigateForward oSelectView
36968>>>
36968>>>        Procedure OnRowClick String sRowId
36971>>>            tWebNavigateData NavigateData
36971>>>            tWebNavigateData NavigateData
36971>>>            Get GetNavigateData to NavigateData
36972>>>
36972>>>            Case Begin
36972>>>                Case (NavigateData.eNavigateType = nfFromParent)
36974>>>// ToDo: Fill in the from-parent child Select view object name for navigate forward
36974>>>Error DFERR_PROGRAM "NavigateForward to this from-parent child Select view not yet defined"
36975>>>>
36975>>>//                    Send NavigateForward of oSelectView Self
36975>>>                    Case Break
36976>>>
36976>>>                Case (NavigateData.eNavigateType = nfFromChild)
36979>>>                    Send NavigateClose Self
36980>>>                    Case Break
36981>>>
36981>>>                Case (NavigateData.eNavigateType = nfFromMain)
36984>>>                    Send NavigateClose Self
36985>>>                    Case Break
36986>>>
36986>>>                Case Else // must be nfUndefined
36986>>>// ToDo: Fill in the from-parent child Select view object name for navigate forward
36986>>>Error DFERR_PROGRAM "NavigateForward to this from-parent child Select view not yet defined"
36987>>>>
36987>>>//                    Send NavigateForward of oSelectView Self
36987>>>
36987>>>            Case End
36987>>>        End_Procedure
36988>>>
36988>>>        Procedure OnGetNavigateForwardData tWebNavigateData ByRef NavigateData Handle hoToView
36991>>>            Move True to NavigateData.bReadOnly
36992>>>        End_Procedure
36993>>>
36993>>>    End_Object 
36994>>>
36994>>>    Object oActionGroup is a cWebMenuGroup
36996>>>
36996>>>        Object oSearch is a cWebMenuItem
36998>>>            Set psCSSClass to "WebPromptMenuItem"
36999>>>            Set psCaption to "Search"
37000>>>
37000>>>            Procedure OnClick
37003>>>                Send Search of oList
37004>>>            End_Procedure
37005>>>
37005>>>        End_Object 
37006>>>
37006>>>        Object oNewButton is a cWebMenuItem
37008>>>            Set psCSSClass to "WebClearMenuItem"
37009>>>            Set psCaption to "New"
37010>>>
37010>>>            WebRegisterPath ntNavigateForward oZoomPerson
37016>>>
37016>>>            Procedure OnClick
37019>>>                Send NavigatePath
37020>>>            End_Procedure
37021>>>
37021>>>            Procedure OnGetNavigateForwardData tWebNavigateData ByRef NavigateData Handle hoToView
37024>>>                Move True to NavigateData.bNewRecord
37025>>>            End_Procedure
37026>>>
37026>>>        End_Object 
37027>>>    End_Object 
37028>>>
37028>>>    Procedure OnNavigateForward tWebNavigateData NavigateData Integer hoInvokingView Integer hoInvokingObject
37031>>>        WebSet pbRender of oNewButton to True
37032>>>        WebSet pbRender of oDetailButton to True
37033>>>
37033>>>        Case Begin
37033>>>            Case (NavigateData.eNavigateType = nfFromParent)
37035>>>                // If from parent, this is a constrained drill down
37035>>>                Case Break
37036>>>
37036>>>            Case (NavigateData.eNavigateType = nfFromChild)
37039>>>                // If from child, this is a probably a parent lookup from a Zoom
37039>>>                Case Break
37040>>>
37040>>>            Case (NavigateData.eNavigateType = nfFromMain)
37043>>>                // If from main, this is a probably a main-file lookup from a Zoom
37043>>>                WebSet pbRender of oDetailButton to False
37044>>>                Case Break
37045>>>
37045>>>            Case Else // must be nfUndefined
37045>>>                // This may be the start of a drilldown query or this may be used for some kind of custom query.
37045>>>
37045>>>        Case End
37045>>>
37045>>>    End_Procedure
37046>>>
37046>>>
37046>>>End_Object 
37047>    Set phoDefaultView to oDashboard
37048>
37048>End_Object
37049>
37049>Send StartWebApp of oWebApp
37050>
Summary
Memory Available: 39962279936
Total Warnings : 0
Total Errors   : 0
Total Symbols  : 24877
Total Resources: 0
Total Commands : 37049
Total Windows  : 0
Total Pages    : 0
Static Data    : 457845
Message area   : 246149
Total Blocks   : 16562
