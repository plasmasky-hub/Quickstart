Compiling Program: D:\DataFlex Projects\Quickstart\AppSrc\WebApp.src
Memory Available: 40542859264
1>Use AllWebAppClasses.pkg
Using pre-compiled package ALLWEBAPPCLASSES.PKG
Including file: AllWebAppClasses.x64.pkd    (D:\DataFlex 24.0\Pkg\AllWebAppClasses.x64.pkd)
36017>Use cConnection.pkg
36017>
36017>Object oApplication is a cApplication
36019>    Object oConnection is a cConnection
36021>        Use LoginEncryption.pkg
Including file: LoginEncryption.pkg    (D:\DataFlex 24.0\Pkg\LoginEncryption.pkg)
36021>>>Use cLoginEncryption.pkg
Including file: cLoginEncryption.pkg    (D:\DataFlex 24.0\Pkg\cLoginEncryption.pkg)
36021>>>>>Use cCryptographerEx.pkg
36021>>>>>
36021>>>>>Class cLoginEncryption is a cObject
36022>>>>>    
36022>>>>>    Procedure Construct_Object
36024>>>>>        Forward Send Construct_Object
36026>>>>>        // this must be set to a multi (40ish) character random key
36026>>>>>        Property String psEncryptPassword ""
36027>>>>>        
36027>>>>>        Object oDataCrypter is a cCryptographerEx
36029>>>>>            Set piHash to CALG_SHA_256
36030>>>>>            Set piCipher to CALG_AES_256
36031>>>>>            Set psProvider to "" //  Not providing a specific provider gives the default provider for the provider type
36032>>>>>            Set piProvider to PROV_RSA_AES
36033>>>>>        End_Object
36034>>>>>    End_Procedure
36035>>>>>    
36035>>>>>    // This can be augmented to return a password encryption key using any
36035>>>>>    // hidden mechanism desired.
36035>>>>>    Function GetEncryptionPassword Returns String
36037>>>>>        String sPassword
36037>>>>>        Get psEncryptPassword to sPassword
36038>>>>>        Function_Return sPassword
36039>>>>>    End_Function
36040>>>>>    
36040>>>>>    // Encrypts a string into an unreadable hash that can later be decrypted using DecryptKey.
36040>>>>>    //
36040>>>>>    // Params:
36040>>>>>    //   sPlainText     String to encrypt.
36040>>>>>    // Returns:
36040>>>>>    //   Base64 encoded hash.
36040>>>>>    Function EncryptPassword String sPlainText Returns String
36042>>>>>        String sEncryptPassword sBase64
36042>>>>>        UChar[] ucBinary
36043>>>>>        Pointer pBase64
36043>>>>>        Integer iVoid
36043>>>>>        
36043>>>>>        //  Encrypt Key
36043>>>>>        Get GetEncryptionPassword to sEncryptPassword
36044>>>>>        If (sEncryptPassword = "") Begin
36046>>>>>            Error DFERR_PROGRAM "No encryption password set"
36047>>>>>>
36047>>>>>        End
36047>>>>>>
36047>>>>>        
36047>>>>>        Get Encrypt of oDataCrypter (StringToUCharArray(sEncryptPassword)) (StringToUCharArray(sPlainText)) to ucBinary
36048>>>>>        
36048>>>>>        If (SizeOfArray(ucBinary) = 0) Begin
36050>>>>>            Error DFERR_PROGRAM "Unable to encrypt database login password"
36051>>>>>>
36051>>>>>            Function_Return ""
36052>>>>>        End
36052>>>>>>
36052>>>>>        
36052>>>>>        //  Encode binary hash to Base64
36052>>>>>        Move (Base64Encode(AddressOf(ucBinary), SizeOfArray(ucBinary))) to pBase64
36053>>>>>        Move (PointerToString(pBase64)) to sBase64
36054>>>>>        Move (Free(pBase64)) to iVoid
36055>>>>>        
36055>>>>>        Function_Return sBase64
36056>>>>>    End_Function
36057>>>>>    
36057>>>>>    
36057>>>>>    // Decrypts the unreadable hash generated by EncryptKey into a readable string.
36057>>>>>    //
36057>>>>>    // Params:
36057>>>>>    //   sBase64EncryptedPassword       Base64 Encrypted password
36057>>>>>    // Returns:
36057>>>>>    //   Readable plain text password
36057>>>>>    Function DecryptPassword String sBase64EncryptedPassword Returns String
36059>>>>>        String sEncryptPassword
36059>>>>>        UChar[] ucBinary ucPlain
36061>>>>>        Boolean bIsHex
36061>>>>>        Integer iLen iVoid
36061>>>>>        Pointer pBinary
36061>>>>>        
36061>>>>>        If (sBase64EncryptedPassword <> "") Begin
36063>>>>>            //  Decode from Base64
36063>>>>>            Move (Base64Decode(AddressOf(sBase64EncryptedPassword), &iLen)) to pBinary
36064>>>>>            
36064>>>>>            Move (ResizeArray(ucBinary, iLen, 0)) to ucBinary
36065>>>>>            Move (MemCopy(AddressOf(ucBinary), pBinary, iLen)) to iVoid
36066>>>>>                        
36066>>>>>            Move (Free(pBinary)) to iVoid
36067>>>>>            
36067>>>>>            //  Encrypted binary hash to string
36067>>>>>            Get GetEncryptionPassword to sEncryptPassword
36068>>>>>            Get Decrypt of oDataCrypter (StringToUCharArray(sEncryptPassword)) ucBinary to ucPlain
36069>>>>>        End
36069>>>>>>
36069>>>>>        
36069>>>>>        Function_Return (UCharArrayToString(ucPlain))
36070>>>>>    End_Function
36071>>>>>End_Class
36072>>>
36072>>>Object oLoginEncryption is a cLoginEncryption
36074>>>
36074>>>    // this must be created in your appsrc directory and must contain an encryption
36074>>>    // key that is set to psEncryptPassword. It will look something like this
36074>>>    //
36074>>>    // Set psEncryptPassword to "JchUAo7W@r.b{<Yk~OONi0nq=sMi[*Rn[A-`Vo)q"
36074>>>    //  
Including file: LoginEncryptionKey.inc    (D:\DataFlex Projects\Quickstart\AppSrc\LoginEncryptionKey.inc)
36074>>>>// Studio generated login encryption key
36074>>>>Set psEncryptPassword to "?8}/Q-)210)Swym#Q+W0hb~(gpePKQ#7^SX\x1qb"
36075>>>>
36075>>>    
36075>>>    // use this to register this object to your cConnection Object. This object
36075>>>    // must be created after the cConnection object
36075>>>    Move Self to ghoLoginEncryption
36076>>>End_Object
36077>    End_Object
36078>End_Object
36079>
36079>Object oWebApp is a cWebApp
36081>    Set psTheme to "Df_Material"
36082>    Set peAlignView to alignCenter
36083>    
36083>    // It is important to set this so that all views will default
36083>    // to drill down style views.
36083>    Set peApplicationStyle to wvsDrillDown   
36084>    Set peApplicationStateMode to asmHistoryAndUrls 
36085>    Set psEncryptPassword to "\$8hJ}-$e/Dr2A_PaZ5~6Ed(y^&7i&^h=h8#=G]:"
36086>
36086>    Object oViewStack is a cWebViewStack
36088>    End_Object
36089>    
36089>    Procedure HideHeader
36092>        WebSet pbRender of oHeaderPanel to False
36093>    End_Procedure
36094>
36094>    Procedure ShowHeader
36097>        WebSet pbRender of oHeaderPanel to True 
36098>    End_Procedure
36099>
36099>    Object oHeaderPanel is a cWebPanel
36101>        Set peRegion to prTop
36102>        Set psCSSClass to "HeaderPanel"
36103>        
36103>        Object oMenuPanel is a cWebPanel
36105>            Set peRegion to prLeft
36106>            Set piWidth to 50
36107>            
36107>            Object oMenuButton is a cWebMenuButton
36109>                Set piMenuHeight to 500
36110>
36110>                Object oDashboard_itm is a cWebMenuItem
36112>                    Set psCaption to C_$Dashboard
36113>                    
36113>                    WebRegisterPath ntNavigateBegin oDashboard
36119>
36119>                    Procedure OnClick
36122>                        Send NavigatePath
36123>                    End_Procedure
36124>                End_Object
36125>
36125>                Object oViewMenu is a cWebMenuItem
36127>                    Set psCaption to C_$View
36128>                End_Object
36129>
36129>                Object oSignOut_itm is a cWebMenuItem
36131>                    Set psCaption to C_$LogOut
36132>
36132>                    Procedure OnClick
36135>                        Send RequestLogOut of ghoWebSessionManager
36136>                    End_Procedure
36137>                End_Object
36138>            End_Object  
36139>
36139>            Object oBackButton is a cWebButton
36141>                Set psCSSClass to "WebBack_Icon"
36142>                Set pbRender to False
36143>                
36143>                Procedure OnClick
36146>                    Handle hoTop
36146>                    
36146>                    Get TopViewHandle of oViewStack to hoTop
36147>                    If (hoTop > 0) Begin
36149>                        Send NavigateCancel of hoTop 
36150>                    End
36150>                End_Procedure
36151>            End_Object
36152>            
36152>            Send AddClient of oViewStack Self
36153>                
36153>            Procedure OnUpdateViewStack
36156>                Handle hoTop hoDflt
36156>                Integer eMode
36156>                Boolean bTop
36156>                
36156>                WebGet peMode of (Owner(Self)) to eMode
36157>                
36157>                Get TopViewHandle of oViewStack to hoTop
36158>                Get GetDefaultView to hoDflt
36159>                Move (hoTop=0 or hoTop=hoDflt) to bTop
36160>                
36160>                WebSet pbRender of oBackButton to (not(bTop) and eMode >= rmMobile)
36161>                WebSet pbRender of oMenuButton to (bTop or eMode < rmMobile)
36162>            End_Procedure
36163>
36163>        End_Object
36164>
36164>        Object oCaptionPanel is a cWebPanel
36166>            Set piColumnCount to 12
36167>
36167>            Object oCaptionBreadcrumb is a cWebBreadcrumb
36169>                Set peBreadcrumbStyle to crumbCaption
36170>                WebSetResponsive peBreadcrumbStyle rmMobile to crumbDropDown
36171>            End_Object         
36172>        End_Object
36173>        
36173>        Object oActionPanel is a cWebPanel
36175>            Set peRegion to prRight
36176>            Set piColumnCount to 1
36177>            Set piWidth to 120
36178>
36178>            Object oMainActions is a cWebActionBar
36180>                Set psGroupName to "MainActions"
36181>
36181>                Set piColumnSpan to 0
36182>                Set peAlign to alignRight
36183>            End_Object
36184>        End_Object
36185>
36185>        Object oBreadcrumbPanel is a cWebPanel
36187>            Set peRegion to prBottom
36188>            
36188>            Object oHorizontalBreadcrumb is a cWebBreadcrumb
36190>                WebSetResponsive pbRender rmMobile to False
36191>            End_Object         
36192>        End_Object
36193>
36193>    End_Object    
36194>
36194>    Use SessionManager.wo
Including file: SessionManager.wo    (D:\DataFlex Projects\Quickstart\AppSrc\SessionManager.wo)
36194>>>Use cWebSessionManagerStandard.pkg
Including file: cWebSessionManagerStandard.pkg    (D:\DataFlex 24.0\Pkg\cWebSessionManagerStandard.pkg)
36194>>>>>Use cWebSessionManager.pkg
36194>>>>>Use cWebAppSessionDataDictionary.dd
Including file: cWebAppSessionDataDictionary.dd    (D:\DataFlex 24.0\Pkg\cWebAppSessionDataDictionary.dd)
36194>>>>>>>Use DataDict.pkg
36194>>>>>>>
36194>>>>>>>Open WebAppSession
Including file: WebAppSession.fd    (D:\DataFlex Projects\Quickstart\DDSrc\WebAppSession.fd)
36196>>>>>>>Open WebAppUser
Including file: WebAppUser.fd    (D:\DataFlex Projects\Quickstart\DDSrc\WebAppUser.fd)
36198>>>>>>>
36198>>>>>>>Class cWebAppSessionDataDictionary is a DataDictionary
36199>>>>>>>    Procedure Construct_Object
36201>>>>>>>        Forward Send Construct_Object
36203>>>>>>>
36203>>>>>>>        Set Main_File to WebAppSession.File_Number
36204>>>>>>>
36204>>>>>>>        Set Add_Server_File to WebAppUser.File_Number
36205>>>>>>>
36205>>>>>>>        Set ParentNullAllowed WebAppUser.File_Number to True
36206>>>>>>>
36206>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
36207>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
36208>>>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
36209>>>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
36210>>>>>>>
36210>>>>>>>        Set Field_Checkbox_Values Field WebAppSession.Active to "Y" "N"
36211>>>>>>>        Set Field_Error Field WebAppSession.Active to 500 "Invalid WebAppSession Active State"
36212>>>>>>>    End_Procedure
36213>>>>>>>
36213>>>>>>>    Procedure Creating
36215>>>>>>>        DateTime dtCurrentDateTime
36215>>>>>>>        
36215>>>>>>>        Forward Send Creating
36217>>>>>>>        
36217>>>>>>>        //  Init usecounter
36217>>>>>>>        Move 0 to WebAppSession.UseCount
36218>>>>>>>        
36218>>>>>>>        //  Set the creation and access time to the current time
36218>>>>>>>        Move (CurrentDateTime()) to dtCurrentDateTime
36219>>>>>>>    
36219>>>>>>>        Get TimeToString dtCurrentDateTime to WebAppSession.CreateTime
36220>>>>>>>        Get TimeToString dtCurrentDateTime to WebAppSession.LastAccessTime
36221>>>>>>>        
36221>>>>>>>        Move dtCurrentDateTime to WebAppSession.CreateDate
36222>>>>>>>        Move dtCurrentDateTime to WebAppSession.LastAccessDate
36223>>>>>>>    End_Procedure
36224>>>>>>>    
36224>>>>>>>    //
36224>>>>>>>    //  Converts the given time to an string that can be saved in the database.
36224>>>>>>>    //
36224>>>>>>>    //  Params:
36224>>>>>>>    //      dtTime  Time to convert
36224>>>>>>>    //  Returns:
36224>>>>>>>    //      String with "HH:MM:SS" format
36224>>>>>>>    //
36224>>>>>>>    Function TimeToString DateTime dtTime Returns String
36226>>>>>>>        String sHours sMinutes sSeconds
36226>>>>>>>        
36226>>>>>>>        //  Extract parts
36226>>>>>>>        Move (String(DateGetHour(dtTime))) to sHours
36227>>>>>>>        Move (String(DateGetMinute(dtTime))) to sMinutes
36228>>>>>>>        Move (String(DateGetSecond(dtTime))) to sSeconds
36229>>>>>>>        
36229>>>>>>>        //  Fill out with 0
36229>>>>>>>        If (Length(sHours) = 1) ;            Move ("0" + sHours) to sHours
36232>>>>>>>        If (Length(sMinutes) = 1) ;            Move ("0" + sMinutes) to sMinutes
36235>>>>>>>        If (Length(sSeconds) = 1) ;            Move ("0" + sSeconds) to sSeconds
36238>>>>>>>        
36238>>>>>>>        Function_Return (sHours + ":" + sMinutes + ":" + sSeconds)
36239>>>>>>>    End_Function
36240>>>>>>>    
36240>>>>>>>    //
36240>>>>>>>    //  Sets the time of the datetime variable to the time in the string.
36240>>>>>>>    //
36240>>>>>>>    //  Params:
36240>>>>>>>    //      dtTime  Datetime variable to add time to
36240>>>>>>>    //      sTimeString String with time in the format "HH:MM:SS"
36240>>>>>>>    //  Returns:
36240>>>>>>>    //      dtDateTime with the loaded time
36240>>>>>>>    //
36240>>>>>>>    Function StringToTime DateTime dtTime String sTimeString Returns DateTime
36242>>>>>>>        String sHours sMinutes sSeconds
36242>>>>>>>        
36242>>>>>>>        //  Extract parts
36242>>>>>>>        Move (Mid(sTimeString, 2, 1)) to sHours
36243>>>>>>>        Move (Mid(sTimeString, 2, 4)) to sMinutes
36244>>>>>>>        Move (Mid(sTimeString, 2, 7)) to sSeconds
36245>>>>>>>        
36245>>>>>>>        //  Set to DateTime
36245>>>>>>>        Move (DateSetHour(dtTime, (Integer(sHours)))) to dtTime
36246>>>>>>>        Move (DateSetMinute(dtTime, (Integer(sMinutes)))) to dtTime
36247>>>>>>>        Move (DateSetSecond(dtTime, (Integer(sSeconds)))) to dtTime
36248>>>>>>>        
36248>>>>>>>        Function_Return dtTime
36249>>>>>>>    End_Function
36250>>>>>>>End_Class
36251>>>>>Use cWebAppUserDataDictionary.dd
Including file: cWebAppUserDataDictionary.dd    (D:\DataFlex 24.0\Pkg\cWebAppUserDataDictionary.dd)
36251>>>>>>>Use DataDict.pkg
36251>>>>>>>Open WebAppUser
36253>>>>>>>Open WebAppSession
36255>>>>>>>
36255>>>>>>>Class cWebAppUserDataDictionary is a DataDictionary
36256>>>>>>>    
36256>>>>>>>    Procedure Construct_Object
36258>>>>>>>        Forward Send Construct_Object
36260>>>>>>>        Set Main_File to WebAppUser.File_Number
36261>>>>>>>
36261>>>>>>>        Set Add_Client_File to WebAppSession.File_Number
36262>>>>>>>
36262>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
36263>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
36264>>>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
36265>>>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
36266>>>>>>>    End_Procedure
36267>>>>>>>
36267>>>>>>>End_Class
36268>>>>>
36268>>>>>Class cWebSessionManagerStandard is a cWebSessionManager
36269>>>>>    
36269>>>>>    Procedure Construct_Object
36271>>>>>        Handle hoUserDD hoSessionDD
36271>>>>>        
36271>>>>>        Forward Send Construct_Object
36273>>>>>        
36273>>>>>        Property Handle phoUserDD 0      // Handle to the WebAppUser DDO
36274>>>>>        Property Handle phoSessionDD 0   // Handle to the WebAppSession DDO        
36275>>>>>        
36275>>>>>        Get Create (RefClass(cWebAppUserDataDictionary)) to hoUserDD
36276>>>>>        Get Create (RefClass(cWebAppSessionDataDictionary)) to hoSessionDD
36277>>>>>        Set DDO_Server of hoSessionDD to hoUserDD
36278>>>>>
36278>>>>>        Set phoUserDD to hoUserDD
36279>>>>>        Set phoSessionDD to hoSessionDD
36280>>>>>        Property Boolean pbCreatingNewSession False
36281>>>>>        Property String psLoginName
36282>>>>>        Property String psUserName ""
36283>>>>>        Property Integer piUserRights 0
36284>>>>>    End_Procedure
36285>>>>>    
36285>>>>>    Function CreateSession String sRemoteAddress Returns String
36287>>>>>        String sSessionKey
36287>>>>>        Integer iErr
36287>>>>>        Boolean bLogWebSession
36287>>>>>        Handle hoSessionDD       
36287>>>>>        Get phoSessionDD to hoSessionDD
36288>>>>>        
36288>>>>>        //  Get session key
36288>>>>>        Forward Get CreateSession sRemoteAddress to sSessionKey
36290>>>>>        
36290>>>>>        Get pbLogWebSession to bLogWebSession
36291>>>>>        If not bLogWebSession Begin
36293>>>>>            Function_Return sSessionKey        
36294>>>>>        End
36294>>>>>>
36294>>>>>
36294>>>>>        //  Store session
36294>>>>>        Send Clear of hoSessionDD
36295>>>>>        Set Field_Changed_Value of hoSessionDD Field WebAppSession.SessionKey to sSessionKey
36296>>>>>        Set Field_Changed_Value of hoSessionDD Field WebAppSession.RemoteAddress to sRemoteAddress
36297>>>>>        Set Field_Changed_Value of hoSessionDD Field WebAppSession.Active to "Y"
36298>>>>>        Get Request_Validate of hoSessionDD to iErr
36299>>>>>        If (iErr) Begin
36301>>>>>            // this should not happen. If it does its a programming error
36301>>>>>            Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
36302>>>>>>
36302>>>>>            Function_Return ""
36303>>>>>        End
36303>>>>>>
36303>>>>>        Send Request_Save of hoSessionDD
36304>>>>>        If (Err) Begin
36306>>>>>            // this shouldn't happen, if it does likely a duplicate session key issue, even through request_save already gave an error we give another one to make tracking down easier
36306>>>>>            Error DFERR_PROGRAM C_$WebAppSesionSaveFailed
36307>>>>>>
36307>>>>>            Function_Return ""
36308>>>>>        End
36308>>>>>>
36308>>>>>       
36308>>>>>        Function_Return sSessionKey        
36309>>>>>    End_Function
36310>>>>>    
36310>>>>>    
36310>>>>>    Function ValidateSession String sSessionKey Boolean bOptLoadWebApp Returns Boolean
36312>>>>>        DateTime dtLastAccess dtCurrent
36312>>>>>        TimeSpan tsDiff
36312>>>>>        Integer iErr iSessionTimeout iSpanMinutes
36312>>>>>        Boolean bResult bCreatingNewSession
36312>>>>>        Boolean bLogWebSession bLoadWebApp
36312>>>>>        Integer eLoginMode
36312>>>>>        String sTime
36312>>>>>        Handle hoSessionDD hoUserDD       
36312>>>>>        
36312>>>>>        Move False to bLoadWebApp
36313>>>>>        If (num_arguments >= 2) Begin
36315>>>>>            Move bOptLoadWebApp to bLoadWebApp
36316>>>>>        End
36316>>>>>>
36316>>>>>        
36316>>>>>        Get phoSessionDD to hoSessionDD
36317>>>>>        Get phoUserDD to hoUserDD
36318>>>>>        
36318>>>>>        Get pbLogWebSession to bLogWebSession
36319>>>>>        Get peLoginMode to eLoginMode
36320>>>>>        
36320>>>>>        // for this object, you can only disable logging if login completely is disabled
36320>>>>>        If (not(bLogWebSession) and (eLoginMode<>lmLoginNone)) Begin
36322>>>>>            Error DFERR_PROGRAM C_$WebSessionLoggingMustBeEnabled
36323>>>>>>
36323>>>>>            Function_Return False
36324>>>>>        End
36324>>>>>>
36324>>>>>
36324>>>>>        //  Clear session properties
36324>>>>>        Set psSessionKey to ""
36325>>>>>        Send UpdateSessionProperties True
36326>>>>>        
36326>>>>>        If not bLogWebSession Begin
36328>>>>>            Forward Get ValidateSession sSessionKey to bResult
36330>>>>>            Function_Return bResult
36331>>>>>        End        
36331>>>>>>
36331>>>>>        
36331>>>>>        Move False to bResult
36332>>>>>        Get piSessionTimeout to iSessionTimeout 
36333>>>>>        
36333>>>>>        //  Check if session exists
36333>>>>>        Send Clear of hoSessionDD
36334>>>>>        Move sSessionKey to WebAppSession.SessionKey
36335>>>>>        Send Find of hoSessionDD EQ Index.1
36336>>>>>            
36336>>>>>        If (Found) Begin
36338>>>>>            //  Calculate timespan between now and last access time
36338>>>>>            Move (CurrentDateTime()) to dtCurrent
36339>>>>>            Move WebAppSession.LastAccessDate to dtLastAccess
36340>>>>>            Get StringToTime of hoSessionDD dtLastAccess WebAppSession.LastAccessTime to dtLastAccess
36341>>>>>            Move (dtCurrent - dtLastAccess) to tsDiff
36342>>>>>            Move (SpanTotalMinutes(tsDiff)) to iSpanMinutes
36343>>>>>            
36343>>>>>            //  Check if session didn't time out
36343>>>>>            If (IsDateValid(dtLastAccess) and (iSessionTimeout <= 0 or (iSpanMinutes < iSessionTimeout)) and WebAppSession.Active = "Y") Begin
36345>>>>>                Forward Get ValidateSession sSessionKey to bResult
36347>>>>>                   
36347>>>>>                If (bResult) Begin
36349>>>>>                    //  Update session record
36349>>>>>                    Get TimeToString of hoSessionDD dtCurrent to sTime 
36350>>>>>                    Set Field_Changed_Value of hoSessionDD Field WebAppSession.LastAccessDate to dtCurrent
36351>>>>>                    Set Field_Changed_Value of hoSessionDD Field WebAppSession.LastAccessTime to sTime
36352>>>>>                    Set Field_Changed_Value of hoSessionDD Field WebAppSession.UseCount to (WebAppSession.UseCount + 1)
36353>>>>>                    Get Request_Validate of hoSessionDD to iErr
36354>>>>>                    If (iErr) Begin
36356>>>>>                        // this should not happen. If it does its a programming error
36356>>>>>                        Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
36357>>>>>>
36357>>>>>                        Function_Return False
36358>>>>>                    End
36358>>>>>>
36358>>>>>                    Send Request_Save of hoSessionDD
36359>>>>>                    
36359>>>>>                    //  Update user properties
36359>>>>>                    Send UpdateSessionProperties False
36360>>>>>                End
36360>>>>>>
36360>>>>>            End
36360>>>>>>
36360>>>>>            Else Begin
36361>>>>>                // Test the Creating New Session Flag to protect against infinite recursion....
36361>>>>>                Get pbCreatingNewSession to bCreatingNewSession
36362>>>>>                
36362>>>>>                If (not(bCreatingNewSession)) Begin
36364>>>>>                    If (not(bLoadWebApp)) Begin
36366>>>>>                        Move False to bResult   //  We can only continue immediately if we were loading the webapp, other operations are not allowed!
36367>>>>>                        Error DFERR_WEBAPP_SESSION_TIMEOUT "Your application session has timed out or is inactive, please login again."
36368>>>>>>
36368>>>>>                        Send NavigateRefresh of ghoWebApp          // refresh the WebApp at the client (triggers a login)
36369>>>>>                    End
36369>>>>>>
36369>>>>>                    Else Begin
36370>>>>>                        Set pbCreatingNewSession to True                    
36371>>>>>                        Get RecreateSession of ghoWebApp to bResult 
36372>>>>>                        Set pbCreatingNewSession to False                        
36373>>>>>                    End
36373>>>>>>
36373>>>>>                End
36373>>>>>>
36373>>>>>            End
36373>>>>>>
36373>>>>>        End
36373>>>>>>
36373>>>>>        Else Begin
36374>>>>>            Error DFERR_WEBAPP_BAD_SESSION_KEY "Session key not known (reload page to recreate session)"
36375>>>>>>
36375>>>>>        End
36375>>>>>>
36375>>>>>        
36375>>>>>        Function_Return bResult
36376>>>>>    End_Function
36377>>>>>    
36377>>>>>    Function UserLogin String sLoginName String sPassword Returns Boolean
36379>>>>>        String sSessionKey sUserPassword
36379>>>>>        Handle hoSessionDD hoUserDD
36379>>>>>        Boolean bMatch  
36379>>>>>        
36379>>>>>        Get phoSessionDD to hoSessionDD
36380>>>>>        Get phoUserDD to hoUserDD
36381>>>>>        Integer iErr eLoginMode
36381>>>>>        
36381>>>>>        // Refind session record
36381>>>>>        Get psSessionKey to sSessionKey
36382>>>>>        Send Clear of hoSessionDD
36383>>>>>        Move sSessionKey to WebAppSession.SessionKey
36384>>>>>        Send Find of hoSessionDD EQ Index.1
36385>>>>>        
36385>>>>>        If (Found and WebAppSession.SessionKey = sSessionKey) Begin
36387>>>>>            Get peLoginMode to eLoginMode
36388>>>>>            
36388>>>>>            //  Find the user
36388>>>>>            Move sLoginName to WebAppUser.LoginName
36389>>>>>            Send Find of hoUserDD EQ Index.1
36390>>>>>            
36390>>>>>            // Check username and password
36390>>>>>            If (Found and (Lowercase(sLoginName) = Lowercase(Trim(WebAppUser.LoginName)))) Begin
36392>>>>>                Get Field_Current_Value of hoUserDD Field WebAppUser.Password to sUserPassword
36393>>>>>                Get ComparePasswords (Trim(sUserPassword)) (Trim(sPassword)) to bMatch
36394>>>>>                
36394>>>>>                If (bMatch) Begin
36396>>>>>                    // Store the login
36396>>>>>                    Set Field_Changed_Value of hoUserDD Field WebAppUser.LastLogin to (CurrentDateTime())
36397>>>>>                    Get Request_Validate of hoSessionDD to iErr
36398>>>>>                    If (iErr) Begin
36400>>>>>                        // this should not happen. If it does its a programming error
36400>>>>>                        Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
36401>>>>>>
36401>>>>>                        Function_Return False
36402>>>>>                    End
36402>>>>>>
36402>>>>>                    
36402>>>>>                    Send Request_Save of hoSessionDD
36403>>>>>                    
36403>>>>>                    // Update session properties
36403>>>>>                    Send UpdateSessionProperties False
36404>>>>>                    Send NotifyChangeRights
36405>>>>>                    Function_Return True
36406>>>>>                End
36406>>>>>>
36406>>>>>                Else Begin
36407>>>>>                    //  We should rely directly on this buffer elsewhere but just be sure
36407>>>>>                    Send Clear of hoUserDD
36408>>>>>                End
36408>>>>>>
36408>>>>>            End
36408>>>>>>
36408>>>>>        End
36408>>>>>>
36408>>>>>          
36408>>>>>        Function_Return False
36409>>>>>    End_Function
36410>>>>>    
36410>>>>>    Function IsLoggedIn Returns Boolean
36412>>>>>        String sLoginName
36412>>>>>        Boolean bLogWebSession bLoggedIn
36412>>>>>        
36412>>>>>        Get pbLogWebSession to bLogWebSession
36413>>>>>        If not bLogWebSession Begin
36415>>>>>            Forward Get IsLoggedIn to bLoggedIn
36417>>>>>            Function_Return bLoggedIn
36418>>>>>        End
36418>>>>>>
36418>>>>>        
36418>>>>>        Get psLoginName to sLoginName
36419>>>>>        
36419>>>>>        Function_Return (sLoginName <> "")
36420>>>>>    End_Function
36421>>>>>    
36421>>>>>    
36421>>>>>    //
36421>>>>>    // This procedure is called when validating a session and after logging in. Its purpose is to 
36421>>>>>    // update properties based on the session and user data. Augment this function to update 
36421>>>>>    // properties based on the session / user table. Note that WebAppUser and WebAppSession contain
36421>>>>>    // the right records when this procedure is called.
36421>>>>>    //
36421>>>>>    // Params:
36421>>>>>    //      bClear   True if the procedure is called before session validation to clear properties.
36421>>>>>    //
36421>>>>>    Procedure UpdateSessionProperties Boolean bClear
36423>>>>>        Handle hoUserDD
36423>>>>>        
36423>>>>>        Get phoUserDD to hoUserDD
36424>>>>>        
36424>>>>>        //  Update user properties
36424>>>>>        If (not(bClear) and HasRecord(hoUserDD)) Begin
36426>>>>>            Set psUsername to (Trim(WebAppUser.FullName))
36427>>>>>            Set psLoginName to (Trim(WebAppUser.LoginName))
36428>>>>>            Set piUserRights to WebAppUser.Rights
36429>>>>>            
36429>>>>>            Send OnSessionPropertiesSet 
36430>>>>>        End
36430>>>>>>
36430>>>>>        Else Begin
36431>>>>>            Set psUsername to ""
36432>>>>>            Set psLoginName to ""
36433>>>>>            Set piUserRights to 0
36434>>>>>            
36434>>>>>            Send OnSessionPropertiesClear
36435>>>>>        End
36435>>>>>>
36435>>>>>    End_Procedure
36436>>>>>    
36436>>>>>    //
36436>>>>>    // This function is called to perform the password comparison. It gets the entered password and
36436>>>>>    // the password value of the user table as parameters. The WebAppUser buffer will contain the
36436>>>>>    // right record. This function can be augmented to implement security features like storing the
36436>>>>>    // password as a hashed value.
36436>>>>>    //
36436>>>>>    // Params:
36436>>>>>    //      sUserPassword       Value of the WebAppUser.Password field.
36436>>>>>    //      sEnteredPassword    Value entered on the login screen during login.
36436>>>>>    //
36436>>>>>    Function ComparePasswords String sUserPassword String sEnteredPassword Returns Boolean
36438>>>>>        Function_Return (sUserPassword = sEnteredPassword)
36439>>>>>    End_Function
36440>>>>>    
36440>>>>>    Procedure OnSessionPropertiesSet
36442>>>>>        //  Empty event stub
36442>>>>>    End_Procedure
36443>>>>>    
36443>>>>>    Procedure OnSessionPropertiesClear
36445>>>>>        //  Empty event stub
36445>>>>>    End_Procedure
36446>>>>>    
36446>>>>>    Procedure EndSession
36448>>>>>        Integer iErr
36448>>>>>        Boolean bLogWebSession
36448>>>>>        Handle hoSessionDD       
36448>>>>>        
36448>>>>>        Get phoSessionDD to hoSessionDD
36449>>>>>        Get pbLogWebSession to bLogWebSession
36450>>>>>        If not bLogWebSession Begin
36452>>>>>            Forward Send EndSession
36454>>>>>            Procedure_Return
36455>>>>>        End
36455>>>>>>
36455>>>>>            
36455>>>>>        //  Check if session exists
36455>>>>>        Send Clear of hoSessionDD
36456>>>>>        Get psSessionKey to WebAppSession.SessionKey
36457>>>>>        
36457>>>>>        Send Find of hoSessionDD EQ Index.1
36458>>>>>        If (Found) Begin
36460>>>>>            Set Field_Changed_Value of hoSessionDD Field WebAppSession.Active to "N"
36461>>>>>            Get Request_Validate of hoSessionDD to iErr
36462>>>>>            If (iErr) Begin
36464>>>>>                // this should not happen. If it does its a programming error
36464>>>>>                Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
36465>>>>>>
36465>>>>>                Procedure_Return
36466>>>>>            End
36466>>>>>>
36466>>>>>            Send Request_Save of hoSessionDD
36467>>>>>        End
36467>>>>>>
36467>>>>>    End_Procedure
36468>>>>>
36468>>>>>End_Class
36469>>>>>
36469>>>
36469>>>Object oSessionManager is a cWebSessionManagerStandard
36471>>>End_Object
36472>>>
36472>>>
36472>    Use Login.wo
Including file: Login.wo    (D:\DataFlex Projects\Quickstart\AppSrc\Login.wo)
36472>>>Use cWebView.pkg
36472>>>Use cWebForm.pkg
36472>>>Use cWebButton.pkg
36472>>>Use cWebPanel.pkg
36472>>>Use cWebLabel.pkg
36472>>>Use cWebSpacer.pkg
36472>>>Use cWebImage.pkg
36472>>>
36472>>>Object oLogin is a cWebView
36474>>>    Set piMinWidth to 250
36475>>>    Set piMaxWidth to 420
36476>>>    Set pbLoginModeEnforced to False
36477>>>    Set piColumnCount to 12
36478>>>    Set psCSSClass to "LoginView"
36479>>>    Set pbServerOnSubmit to True
36480>>>    
36480>>>    Set psStateViewName to "Login"
36481>>>    Set pbStateReplace to True  // Always replace the state so the login never becomes its own history item
36482>>>    
36482>>>    Property String psPrevStateHash ""  // Remember the state hash that the user navigated too so we can redirect after login
36485>>>    
36485>>>    Delegate Set phoLoginView to Self
36487>>>    
36487>>>    Object oTopSpacer is a cWebSpacer
36489>>>        Set pbFillHeight to True
36490>>>        Set piColumnSpan to 12
36491>>>    End_Object
36492>>>    
36492>>>    Object oWarning is a cWebLabel
36494>>>        Set pbVisible to False
36495>>>        Set psCaption to "Invalid User ID or password. \n\rHint: 'Guest' & 'guest'."
36496>>>        Set peAlign to alignCenter
36497>>>        Set piColumnSpan to 12
36498>>>        Set psCSSClass to "LoginWarning"
36499>>>    End_Object
36500>>>    
36500>>>    Object oLogo is a cWebImage
36502>>>        Set piColumnSpan to 10
36503>>>        Set psUrl to "images/DF_Logo_Retina.png"
36504>>>        Set pePosition to wiFit
36505>>>        Set piColumnIndex to 1
36506>>>        Set piHeight to 160
36507>>>        
36507>>>        WebSetResponsive piHeight rmMobile to 100  // Best for small smart phones
36508>>>    End_Object
36509>>>    
36509>>>    Object oLoginName is a cWebForm
36511>>>        Set psLabel to "User ID:"
36512>>>        Set peLabelPosition to lpTop
36513>>>        Set piMaxLength to 20
36514>>>        Set piColumnIndex to 1
36515>>>        Set pbShowLabel to False
36516>>>        Set psPlaceHolder to "loginname"
36517>>>        Set piColumnSpan to 10
36518>>>        Set psAutoComplete to "username"
36519>>>    End_Object
36520>>>    
36520>>>    Object oPassword is a cWebForm
36522>>>        Set psLabel to "Password:"
36523>>>        Set pbPassword to True
36524>>>        Set peLabelAlign to alignLeft
36525>>>        Set piMaxLength to 20
36526>>>        Set peLabelPosition to lpTop
36527>>>        Set pbShowLabel to False
36528>>>        Set psPlaceHolder to "password"
36529>>>        Set piColumnSpan to 10
36530>>>        Set piColumnIndex to 1
36531>>>        Set psAutoComplete to "current-password"
36532>>>    End_Object
36533>>>    
36533>>>    Object oWebSpacer1 is a cWebSpacer
36535>>>        Set piColumnSpan to 12
36536>>>        Set piHeight to 10
36537>>>    End_Object
36538>>>    
36538>>>    Object oLoginButton is a cWebButton
36540>>>        Set pbShowLabel to False
36541>>>        Set psCaption to "sign in"
36542>>>        Set pbServerOnClick to True
36543>>>        Set piColumnSpan to 10
36544>>>        Set piColumnIndex to 1
36545>>>        
36545>>>        Procedure OnClick
36548>>>            Send DoLogin
36549>>>        End_Procedure
36550>>>    End_Object
36551>>>    
36551>>>    Object oBottomSpacer is a cWebSpacer
36553>>>        Set pbFillHeight to True
36554>>>        Set piColumnSpan to 12
36555>>>    End_Object
36556>>>    
36556>>>    Procedure DoLogin
36559>>>        String sLoginName sPassword sPrevStateHash
36559>>>        Boolean bResult
36559>>>        
36559>>>        WebGet psValue of oLoginName to sLoginName
36560>>>        WebGet psValue of oPassword to sPassword
36561>>>        
36561>>>        Get UserLogin of ghoWebSessionManager sLoginName sPassword to bResult
36562>>>        
36562>>>        If (bResult) Begin
36564>>>            Send Hide of oLogin
36565>>>            Send ShowHeader of ghoWebApp
36566>>>            WebSet psCSSClass of ghoWebApp to ""
36567>>>            
36567>>>            WebGet psPrevStateHash to sPrevStateHash
36568>>>            Send NavigateToStateHash of ghoWebApp sPrevStateHash True
36569>>>            
36569>>>            // clear the login values. we don't want to return the login id & password as synchronized properties....
36569>>>            WebSet psValue of oLoginName to ""
36570>>>            WebSet psValue of oPassword  to ""
36571>>>            WebSet pbVisible of oWarning to False
36572>>>        End
36572>>>>
36572>>>        Else Begin
36573>>>            WebSet pbVisible of oWarning to True
36574>>>        End
36574>>>>
36574>>>    End_Procedure
36575>>>    
36575>>>    Procedure OnSubmit
36578>>>        Send DoLogin
36579>>>    End_Procedure
36580>>>    
36580>>>    Procedure OnLoad
36583>>>        String sPrevStateHash sView
36583>>>        
36583>>>        Forward Send OnLoad
36585>>>        
36585>>>        //  Store the current state so we can go back to that later (only if it points to a different view)
36585>>>        Get StateHash of ghoWebApp to sPrevStateHash
36586>>>        Send ParseViewStateHash sPrevStateHash (&sView)
36587>>>        If (Lowercase(sView) <> Lowercase(psStateViewName(Self))) Begin
36589>>>            WebSet psPrevStateHash to sPrevStateHash
36590>>>        End
36590>>>>
36590>>>        
36590>>>    End_Procedure
36591>>>    
36591>>>    Procedure OnBeforeShow
36594>>>        //  Hide header & apply nice background style
36594>>>        Send HideHeader to ghoWebApp
36595>>>        WebSet psCSSClass of ghoWebApp to "LoginBackground"
36596>>>    End_Procedure
36597>>>    
36597>>>End_Object
36598>>>
36598>>>
36598>>>
36598>>>
36598>    Use WebResourceManager.wo
Including file: WebResourceManager.wo    (D:\DataFlex Projects\Quickstart\AppSrc\WebResourceManager.wo)
36598>>>Use cWebResourceManager.pkg
36598>>>
36598>>>Object oWebResourceManager is a cWebResourceManager
36600>>>End_Object
36601>    
36601>    Use Dashboard.wo
Including file: Dashboard.wo    (D:\DataFlex Projects\Quickstart\AppSrc\Dashboard.wo)
36601>>>Use cWebView.pkg
36601>>>Use cWebPanel.pkg
36601>>>Use cWebForm.pkg
36601>>>Use cWebButton.pkg
36601>>>Use cWebGroup.pkg
36601>>>Use cWebSpacer.pkg
36601>>>Use cWebHtmlBox.pkg
36601>>>Use cWebMenuGroup.pkg
36601>>>Use cWebMenuItem.pkg
36601>>>Use cWebLabel.pkg
36601>>>Use cWebList.pkg
36601>>>Use cWebColumn.pkg
36601>>>
36601>>>Object oDashboard is a cWebView
36603>>>
36603>>>    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
36603>>>    // Add a DDO Structure 
36603>>>    //
36603>>>    // There is no need to synchronize a DD structure on the client so we do
36603>>>    // not set the Server property or send ADDOStructure. We will simply use
36603>>>    // DDO's to mine data and generate HTML for our cWebHTMLBox objects.
36603>>>    // It is the HTML in these objects that is sent to the client each time 
36603>>>    // this page is shown.
36603>>>    //
36603>>>    // Also, it is important for the drill-down Navigation interface that we
36603>>>    // do not set the Server property to some DDO because this will affect 
36603>>>    // constraints in the next view that we navigate to.
36603>>>    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
36603>>>
36603>>>    Set piMaxWidth to 1024
36604>>>    
36604>>>    Set psCaption to "Dashboard"
36605>>>    Set peViewType to vtUndefined
36606>>>    Set pbShowCaption to False
36607>>>    Set psCSSClass to "Dashboard"
36608>>>    
36608>>>    Object oWebMainPanel is a cWebPanel
36610>>>        Set piColumnCount to 24
36611>>>        
36611>>>        // - - - - - - - - - - - - - - -
36611>>>        // Main Panel's Responsive Rules
36611>>>        // - - - - - - - - - - - - - - -
36611>>>        WebSetResponsive piColumnCount rmMobile to 1
36612>>>        WebSetResponsive piColumnCount rmTabletPortrait to 16
36613>>>    
36613>>>        Object oTiles_grp is a cWebGroup
36615>>>            Set piColumnSpan to 8
36616>>>            Set pbShowBorder to False
36617>>>            Set pbShowCaption to False
36618>>>            Set piColumnCount to 12
36619>>>            
36619>>>            Set psCSSClass to "TilesGroup"
36620>>>    
36620>>>            Object oWelcomeTile is a cWebHtmlBox
36622>>>                Set piColumnSpan to 6
36623>>>                Set psCSSClass to "Tile Light"
36624>>>                Set psHtml to '<div Class="WebCon_Sizer"><div class="Tile_Title">Welcome</div><div Class="Tile_Subtitle">--</div></div>'
36625>>>    
36625>>>                Procedure OnLoad
36628>>>                    Send UpdateHTML ('<div class="WebCon_Sizer">' + ;                                     '<div class="Tile_Title">Welcome</div>' +;                                     '<div class="Tile_Subtitle">' - htmlEncode(psUserName(ghoWebSessionManager)) - '</div>' +;                                     '</div>')
36629>>>                End_Procedure
36630>>>                
36630>>>            End_Object
36631>>>    
36631>>>            Object oTile2 is a cWebHtmlBox
36633>>>                Set pbServerOnClick to True
36634>>>                Set piColumnSpan to 6
36635>>>                Set piColumnIndex to 6
36636>>>                Set psCSSClass to "Tile LightAlternate"
36637>>>                Set psHtml to '<div class="WebCon_Sizer" data-ServerOnClick="openview"><div Class="Tile_Title">Tile 2</div><div class="Tile_Subtitle"></div></div>'
36638>>>                                
36638>>>                // WebRegisterPath ntNavigateForwardCustom oYourViewName
36638>>>                
36638>>>                Procedure OnClick String sId String sParam
36641>>>                    Send NavigatePath
36642>>>                End_Procedure
36643>>>                
36643>>>            End_Object
36644>>>    
36644>>>            Object oTile3 is a cWebHtmlBox
36646>>>                Set pbServerOnClick to True
36647>>>                Set piColumnSpan to 6
36648>>>                Set psCSSClass to "Tile Dark"
36649>>>                Set psHtml to '<div class="WebCon_Sizer" data-ServerOnClick="openview"><div Class="Tile_Title">Tile 3</div><div class="Tile_Subtitle"></div></div>'
36650>>>    
36650>>>                // WebRegisterPath ntNavigateForwardCustom oYourViewName
36650>>>                
36650>>>                Procedure OnClick String sId String sParam
36653>>>                    Send NavigatePath
36654>>>                End_Procedure
36655>>>                
36655>>>            End_Object
36656>>>    
36656>>>            Object oTile4 is a cWebHtmlBox
36658>>>                Set pbServerOnClick to True
36659>>>                Set piColumnSpan to 6
36660>>>                Set piColumnIndex to 6
36661>>>                Set psCSSClass to "Tile DarkAlternate"
36662>>>                Set psHtml to '<div class="WebCon_Sizer" data-ServerOnClick="openview"><div Class="Tile_Title">Tile 4</div><div class="Tile_Subtitle"></div></div>'
36663>>>            
36663>>>                // WebRegisterPath ntNavigateForwardCustom oYourViewName
36663>>>                
36663>>>                Procedure OnClick String sId String sParam
36666>>>                    Send NavigatePath
36667>>>                End_Procedure
36668>>>                
36668>>>            End_Object
36669>>>        End_Object
36670>>>    
36670>>>    End_Object
36671>>>    
36671>>>    Procedure OnBeforeShow
36674>>>        // Each time this view is shown we will update the appropriate information.
36674>>>    End_Procedure
36675>>>
36675>>>End_Object
36676>    Set phoDefaultView to oDashboard
36677>
36677>End_Object
36678>
36678>Send StartWebApp of oWebApp
36679>
Summary
Memory Available: 40541691904
Total Warnings : 0
Total Errors   : 0
Total Symbols  : 24773
Total Resources: 0
Total Commands : 36678
Total Windows  : 0
Total Pages    : 0
Static Data    : 454393
Message area   : 242165
Total Blocks   : 16430
